# SigmaStar trade secret
# Copyright (c) [2019~2020] SigmaStar Technology.
# All rights reserved.
#
# Unless otherwise stipulated in writing, any and all information contained
# herein regardless in any format shall remain the sole proprietary of
# SigmaStar and be kept in strict confidence
# (SigmaStar Confidential Information) by the recipient.
# Any unauthorized act including without limitation unauthorized disclosure,
# copying, use, reproduction, sale, distribution, modification, disassembling,
# reverse engineering and compiling of the contents of SigmaStar Confidential
# Information is unlawful and strictly prohibited. SigmaStar hereby reserves the
# rights to any and all damages, losses, costs and expenses resulting therefrom.
#

ifeq ($(FLASH_TYPE), nor)
mtdids              = nor0=nor0
else ifeq ($(FLASH_TYPE), spinand)
mtdids              = nand0=nand0
endif

recargs             = part=$(RECOVERY_PAT_NAME),off=$(RECOVERY_BLK_OFFSET),pin=$(RECOVERY_KEY_PIN),level=$(RECOVERY_KEY_LEVEL)

mtdparts            = \' $(MTDPARTS)

bootargs            = $(rootfs$(BOOTENV)) $(kernel$(BOOTENV)) $(EXBOOTARGS) mtdparts=\$${mtdparts} nohz=off
bootargs_linux_only = $(rootfs$(BOOTENV)) $(kernel_only$(BOOTENV)) $(EXBOOTARGS) mtdparts=\$${mtdparts} nohz=off
bootargs_rtos       = $(rtos$(BOOTENV))
bootargs_hyp        = $(vmm$(BOOTENV))
ifeq ($(DUAL_OS), on)
ifeq ($(CONFIG_ENABLE_POWER_SAVE_AOV), y)
bootcmd             = \' $(BOOTCMD_LINUX_ONLY_ENV)
else
bootcmd             = \' $(BOOTCMD_ENV)
endif
else
bootcmd             = \' $(BOOTCMD_ENV)
endif
bootcmd_linux_only  = \' $(BOOTCMD_LINUX_ONLY_ENV)
bootcmd_dualos      = \' $(BOOTCMD_ENV)

ifeq ($(USE_AB_SYSTEM_BOOT), y)
bootcmd_a             = \' $(BOOTCMD_ENV_A)
bootcmd_b             = \' $(BOOTCMD_ENV_B)
slot_metadata         = \'
slot_number           = \'
endif

rtos_base           = $(RTOS_LOAD_ADDR)
ep_addr_rtos        = $(RTOS_LOAD_ADDR)

initrd_high         = $(INITRAMFSLOADADDR)
initrd_block        = 110

ifneq ($(ramdisk$(RESOURCE)),)
initrd_comp         = $(ramdisk$(OPTIONS))
initrd_size         = \$${filesize}
else ifeq ($(rootfs$(FSTYPE)),ramfs)
initrd_comp         = $(rootfs(OPTIONS))
initrd_size         = \$${filesize}
endif

fdt_high            = 0xffffffffffffffff
dtb_file_size       = \$${filesize}

kernel_dtbo_list    = $(KERNEL_DTBO_LIST)
uboot_dtbo_list     = $(UBOOT_DTBO_LIST)

kernel_file_size    = \$${filesize}
recovery_file_size  = \$${filesize}
rootfs_file_size    = \$${filesize}

overdrive           = $(OVERDRIVE)
