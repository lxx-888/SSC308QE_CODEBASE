# this config is for nor
# ipl + cis + ipl_cust + uboot = boot [mtd0]
# env [mtd1]
# ddrtrain [mtd2]
# kernel [mtd3]
# rootfs ——> squashfs [mtd4]
# ramdisk [mtd5]
# miservice ——> squashfs [mtd6]
# customer ——> jffs2 [mtd7]

PURELINUX_FASTBOOT_ENABLE:=y

# image info
ifeq ($(CONFIG_SENSOR_IPL_EARLYINIT_SUPPORT), y)
IMAGE_LIST			= boot kernel ramdisk earlyinit rootfs miservice customer
else
IMAGE_LIST			= boot kernel ramdisk rootfs miservice customer
endif
BOOT_IMAGE_LIST			=	ipl cis ipl_cust uboot
OTA_IMAGE_LIST			=	boot kernel miservice customer
USR_MOUNT_BLOCKS		=	miservice customer

# flash info
FLASH_TYPE			    =	nor
FLASH_BLK_SIZE			=	0x10000
FLASH_BLK_CNT			=	256
FLASH_PG_SIZE			=	0x1000
ifeq ($(UBOOT_VERSION), 201501)
MTDPARTS			=	"mtdparts=nor0:$(boot$(MTDPART)),$(cis$(SYSTAB))"
else
MTDPARTS			=	"nor0:$(boot$(MTDPART)),$(cis$(SYSTAB))"
endif

# bootcmd
BOOTCMD_ENV			=	$(ramdisk$(BOOTCMD)) $(kernel$(BOOTCMD))

# ext info
ENV_CFG				=	/dev/mtd1 0x0 $(call get_env_size) $(env$(PATSIZE))

# cis
cis$(RESOURCE)			=	$(IMAGEDIR)/cis.bin
cis$(DATASIZE)			=	$(call max, $(call alignup, $(call filesize, $(cis$(RESOURCE))), $(FLASH_PG_SIZE)), 0xA000)
cis$(PATSIZE)			=	$(cis$(DATASIZE))
cis$(BOOTTAB0)			=	$(ipl$(MTDPART)),$(cis$(PATSIZE))(CIS),$(ipl_cust$(MTDPART)),$(uboot$(MTDPART)),$(env$(PATSIZE))@$(boot$(PATSIZE))(ENV)

ifeq ($(CONFIG_SENSOR_IPL_EARLYINIT_SUPPORT), y)
cis$(SYSTAB)			=	$(ddrtrain$(MTDPART)),$(kernel$(MTDPART)),$(rootfs$(MTDPART)),$(earlyinit$(MTDPART)),$(ramdisk$(MTDPART)),$(miservice$(MTDPART)),$(customer$(MTDPART))
else
cis$(SYSTAB)			=	$(ddrtrain$(MTDPART)),$(kernel$(MTDPART)),$(rootfs$(MTDPART)),$(ramdisk$(MTDPART)),$(miservice$(MTDPART)),$(customer$(MTDPART))
endif
cis$(MTDPART)			=	$(cis$(PATSIZE))(CIS)

# ipl
ipl$(RESOURCE)			=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/ipl/$(IPL_CONFIG)
ipl$(DATASIZE)			=	$(call alignup, $(call filesize, $(ipl$(RESOURCE))), $(FLASH_PG_SIZE))
ipl$(COPIES)			=   1
ipl$(PATSIZE)			=	$(call multiplyhex, $(ipl$(COPIES)), $(ipl$(DATASIZE)))
ipl$(MTDPART)			=	$(ipl$(PATSIZE))(IPL)

# ipl_cust
ipl_cust$(RESOURCE)		=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/ipl/$(IPL_CUST_CONFIG)
ipl_cust$(DATASIZE)		=	$(call alignup, $(call filesize, $(ipl_cust$(RESOURCE))), $(FLASH_PG_SIZE))
ipl_cust$(COPIES)		=   1
ipl_cust$(PATSIZE)		=	$(call multiplyhex, $(ipl_cust$(COPIES)), $(ipl_cust$(DATASIZE)))
ipl_cust$(MTDPART)		=	$(ipl_cust$(PATSIZE))(IPL_CUST)

# uboot
uboot$(RESOURCE)		=	$(PROJ_ROOT)/board/uboot/$(UBOOT_BIN)
uboot$(DATASIZE)		=	$(call alignup, $(call filesize, $(uboot$(RESOURCE))), $(FLASH_PG_SIZE))
uboot$(PATSIZE)			=	$(uboot$(DATASIZE))
uboot$(MTDPART)			=	$(uboot$(PATSIZE))(UBOOT)

# boot
boot$(RESOURCE)			=	$(IMAGEDIR)/boot.bin
boot$(DATASIZE)			=	$(call sum, $(ipl$(PATSIZE)) $(ipl_cust$(PATSIZE)) $(uboot$(PATSIZE)) $(cis$(PATSIZE)) $(env$(PATSIZE)))
boot$(PATSIZE)			=	$(shell printf 0x%X $(shell expr $(shell printf %d $(call alignup, $(boot$(DATASIZE)), $(FLASH_BLK_SIZE))) - $(shell printf %d $(env$(PATSIZE)))))
boot$(MTDPART)			=	$(boot$(PATSIZE))(BOOT),$(env$(MTDPART))
boot$(OTABLK)			=	/dev/mtd0

# env
env$(PATSIZE)			=	$(FLASH_PG_SIZE)
env$(MTDPART)			=	$(env$(PATSIZE))(ENV)

# ddrtrain
ddrtrain$(PATSIZE)		=	0x60000
ddrtrain$(MTDPART)		=	$(ddrtrain$(PATSIZE))(DDRTRAIN)

# kernel
kernel$(RESOURCE)		=	$(PROJ_ROOT)/kbuild/$(KERNEL_VERSION)/arch/$(ARCH)/boot/$(KERNEL_BIN)
kernel$(DATASIZE)		=	0x240000
kernel$(PATSIZE)		=	$(kernel$(DATASIZE))
kernel$(PATNAME)		=	KERNEL
kernel$(MTDPART)		=	$(kernel$(PATSIZE))(KERNEL)
kernel$(OTABLK)			=	/dev/mtd3
kernel$(BOOTENV)		=	$(KERNEL_BOOT_ENV) loglevel=3
kernel$(BOOTCMD)		=	loados nor by_header KERNEL by_header\;$(KERNEL_SIGN$(BOOTCMD))dcache off\;bootm \$${loados_addr}\;
kernel_only$(BOOTENV)		=	$(kernel$(BOOTENV))

# ramdisk$(PATSIZE) is compressed size, and ramdisk$(DATASIZE) is uncompressed size
ramdisk$(RESOURCE)		=	$(PROJ_ROOT)/release/chip/$(CHIP)/$(PRODUCT)/common/$(TOOLCHAIN)/$(TOOLCHAIN_VERSION)/release/bin/kernel/$(FLASH_TYPE)/ramdisk
ramdisk$(FSTYPE)		=	gz
ramdisk$(PATSIZE)		=	0x3C0000
ramdisk$(DATASIZE)		=	$$(printf "0x%x" $$(stat -c "%s" $(IMAGEDIR)/ramdisk.img))
ramdisk$(MTDPART)		=	$(ramdisk$(PATSIZE))(RAMDISK)
ramdisk$(OPTIONS)		=	sz
ramdisk$(BOOTCMD)		=	loados nor by_header RAMDISK by_header\;$(RAMDISK_SIGN$(BOOTCMD))

ifeq ($(CONFIG_SENSOR_IPL_EARLYINIT_SUPPORT), y)
# earlyinit
earlyinit$(RESOURCE)	=	$(PROJ_ROOT)/board/rtos/earlyinit.bin
earlyinit$(PATNAME)		=	EIB
earlyinit$(PATSIZE)		=	0x20000
earlyinit$(MTDPART)		=	$(earlyinit$(PATSIZE))(EIB)
endif
# rootfs
rootfs$(RESOURCE)		=	$(OUTPUTDIR)/rootfs
rootfs$(FSTYPE)			=	squashfs
rootfs$(PATSIZE)		=	0x1d0000
rootfs$(MOUNTTG)		=	/usr
rootfs$(MOUNTPT)		=	/dev/mtdblock4
rootfs$(OPTIONS)		=	xz
rootfs$(MTDPART)		=	$(rootfs$(PATSIZE))(rootfs)
rootfs$(OTABLK)			=	/dev/mtd4
rootfs$(BOOTENV)		=	root=/dev/ram rdinit=/linuxrc initrd=$(INITRAMFSLOADADDR),$(ramdisk$(DATASIZE)) rootwait

# miservice
miservice$(RESOURCE)	=	$(OUTPUTDIR)/miservice/config
miservice$(FSTYPE)		=	squashfs
miservice$(PATSIZE)		=	0x200000
miservice$(MOUNTTG)		=	/config
ifeq ($(CONFIG_SENSOR_IPL_EARLYINIT_SUPPORT), y)
miservice$(MOUNTPT)		=	/dev/mtdblock7
miservice$(OTABLK)		=	/dev/mtd7
else
miservice$(MOUNTPT)		=	/dev/mtdblock6
miservice$(OTABLK)		=	/dev/mtd6
endif
miservice$(OPTIONS)		=	xz
miservice$(MTDPART)		=	$(miservice$(PATSIZE))(miservice)

# customer
customer$(RESOURCE)		=	$(OUTPUTDIR)/customer
customer$(FSTYPE)		=	jffs2
customer$(PATSIZE)		=	0x210000
customer$(MOUNTTG)		=	/customer
ifeq ($(CONFIG_SENSOR_IPL_EARLYINIT_SUPPORT), y)
customer$(MOUNTPT)		=	/dev/mtdblock8
customer$(OTABLK)		=	/dev/mtd8
else
customer$(MOUNTPT)		=	/dev/mtdblock7
customer$(OTABLK)		=	/dev/mtd7
endif
customer$(OPTIONS)		=	xz
customer$(MTDPART)		=	$(customer$(PATSIZE))(customer)
