# this config is for nor
# ipl + cis + ipl_cust + uboot = boot [mtd0]

# image info
IMAGE_LIST			=	boot tf-a kernel rootfs misc miservice customer
BOOT_IMAGE_LIST			=	ipl cis freertos

# flash info
FLASH_TYPE			=	nor
FLASH_BLK_SIZE			=	0x10000
FLASH_BLK_CNT			=	2
FLASH_PG_SIZE			=	0x1000
MTDPARTS			=	"nor0:$(boot$(MTDPART))"

# bootcmd
BOOTCMD_ENV			=	dcache on\; sf probe 0\; $(rootfs$(BOOTCMD)) $(ROOTFS_SIGN$(BOOTCMD)) $(kernel$(BOOTCMD)) $(KERNEL_SIGN$(BOOTCMD)) bootm $(KERNELBOOTADDR)\;

# cis
cis$(RESOURCE)			=	$(IMAGEDIR)/cis.bin
cis$(DATASIZE)			=	$(call max, $(call alignup, $(call filesize, $(cis$(RESOURCE))), $(FLASH_PG_SIZE)), 0xA000)
cis$(PATSIZE)			=	$(cis$(DATASIZE))
cis$(BOOTTAB0)			=	$(ipl$(MTDPART)),$(cis$(PATSIZE))(CIS),$(freertos$(MTDPART))

# ipl
ipl$(RESOURCE)			=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/ipl/IPL_PCIE_BOOT.bin
ipl$(DATASIZE)			=	$(call alignup, $(call filesize, $(ipl$(RESOURCE))), $(FLASH_PG_SIZE))
ipl$(PATSIZE)			=	$(ipl$(DATASIZE))
ipl$(MTDPART)			=	$(ipl$(PATSIZE))(IPL)

# free_rtos
ifeq ($(EP_PCIE_USE_PORT),0)
freertos$(RESOURCE)		=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/freertos/FREERTOS_PCIE_BOOT_USE_PORT0.bin
else ifeq ($(EP_PCIE_USE_PORT),1)
freertos$(RESOURCE)		=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/freertos/FREERTOS_PCIE_BOOT_USE_PORT1.bin
else
freertos$(RESOURCE)		=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/freertos/FREERTOS_PCIE_BOOT_USE_PORT1.bin
endif
freertos$(DATASIZE)		=	$(call alignup, $(call filesize, $(freertos$(RESOURCE))), $(FLASH_PG_SIZE))
freertos$(PATSIZE)		=	$(freertos$(DATASIZE))
freertos$(MTDPART)		=	$(freertos$(PATSIZE))(RTOS)

# boot
boot$(RESOURCE)			=	$(IMAGEDIR)/boot.bin
boot$(DATASIZE)			=	$(call sum, $(ipl$(PATSIZE)) $(ipl_cust$(PATSIZE)) $(freertos$(PATSIZE)) $(cis$(PATSIZE)) $(env$(PATSIZE)))
boot$(PATSIZE)			=	$(shell printf 0x%X $(shell expr $(shell printf %d $(call alignup, $(boot$(DATASIZE)), $(FLASH_BLK_SIZE))) - $(shell printf %d $(env$(PATSIZE)))))
boot$(MTDPART)			=	$(boot$(PATSIZE))(BOOT)
boot$(OTABLK)			=	/dev/mtd0

# kernel
kernel$(RESOURCE)		=	$(PROJ_ROOT)/kbuild/$(KERNEL_VERSION)/arch/$(ARCH)/boot/$(KERNEL_BIN)
kernel$(DATASIZE)		=	0x300000
kernel$(PATSIZE)		=	$(kernel$(DATASIZE))
kernel$(PATNAME)		=	KERNEL
kernel$(BOOTENV)		=	$(KERNEL_BOOT_ENV) loglevel=3
kernel$(BOOTCMD)		=	loados nor $(KERNELBOOTADDR) KERNEL by_header\;
kernel$(MTDPART)		=	$(kernel$(PATSIZE))(KERNEL)

# tf-a
tf-a$(RESOURCE)			=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/tf-a/bl31.bin

# rootfs
rootfs$(RESOURCE)		=	$(IMAGEDIR)/rootfs.ramfs
rootfs$(FSTYPE)			=	ramfs
rootfs$(OPTIONS)		=	gz
rootfs$(PATSIZE)		=	0x3000000
rootfs$(BOOTENV)		=	rootfstype=ramfs initrd=$(INITRAMFSLOADADDR),$(rootfs$(PATSIZE))
rootfs$(BOOTCMD)		=	sf read $(INITRAMFSLOADADDR) rootfs \$${rootfs_file_size}\;
rootfs$(MTDPART)		=	$(rootfs$(PATSIZE))(rootfs)

# misc
misc$(RESOURCE)			=	$(OUTPUTDIR)/rootfs/misc
misc$(FSTYPE)			=	cponly

# miservice
miservice$(RESOURCE)		=	$(OUTPUTDIR)/rootfs/config
miservice$(FSTYPE)		=	cponly

# customer
customer$(RESOURCE)		=	$(OUTPUTDIR)/rootfs/customer
customer$(FSTYPE)		=	cponly
