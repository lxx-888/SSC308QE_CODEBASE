# this config is for spinand
# cis
# ipl + ipl_cust + uboot = boot [mtd0/mtd1]
# env [mtd2]
# kernel [mtd3/mtd4]
# dtb
# rootfs ——> squashfs [mtd6]
# misc ——> fwfs [mtd7]
# miservice + customer ——> ubia [mtd8]

# image info
IMAGE_LIST			=	cis boot kernel dtb riscvfw rootfs misc ubia miservice customer
BOOT_IMAGE_LIST			=	ipl ipl_cust uboot
OTA_IMAGE_LIST			=	boot kernel misc miservice customer
USR_MOUNT_BLOCKS		=	misc miservice customer

# flash info
FLASH_TYPE			=	spinand
FLASH_BLK_SIZE			=	0x20000
FLASH_BLK_CNT			=	1024
FLASH_PG_SIZE			=	0x800
FLASH_SPARE_SIZE		=	64
#FLASH_PLANE_CNT		=	2
BLK_PB0_OFFSET			=	$(shell echo $$[$(cis$(PATSIZE))/$(FLASH_BLK_SIZE)])
BLK_PB1_OFFSET			=	$(shell echo $$[$(call sum, $(cis$(PATSIZE)) $(boot$(PATSIZE)))/$(FLASH_BLK_SIZE)])
BLPINB				=	0
BAKCNT				=	3
BAKOFS				=	1
#FLASH_ECC_TYPE			=	ECC_TYPE_8BIT
#FLASH_ECC_TYPE			=	ECC_TYPE_16BIT
MTDPARTS			=	"nand0:$(cis$(MTDPART)),$(boot$(MTDPART)),$(cis$(SYSTAB))"

# bootcmd
BOOTCMD_ENV			=	dcache on\; $(dtb$(BOOTCMD)) $(kernel$(BOOTCMD)) $(KERNEL_SIGN$(BOOTCMD)) bootm $(KERNELBOOTADDR) - $(DTBBOOTADDR)\; dcache on\; $(kernel$(BOOTREC)) bootm $(KERNELBOOTADDR)\;

# ext info
ENV_CFG				=	/dev/mtd2 0x0 $(call get_env_size) $(env$(PATSIZE))
ubia$(MTDPART)			=	-(ubia)

# cis
cis$(RESOURCE)			=	$(IMAGEDIR)/cis.bin
cis$(PATSIZE)			=	$(call multiplyhex, $(FLASH_BLK_SIZE), 10)
cis$(BOOTTAB0)			=	$(cis$(PATSIZE))(CIS),$(ipl$(MTDPART)),$(ipl_cust$(MTDPART)),$(uboot$(MTDPART))
cis$(BOOTTAB1)			=	$(ipl$(MTDPART)),$(ipl_cust$(MTDPART)),$(uboot$(MTDPART))
cis$(SYSTAB)			=	$(env$(MTDPART)),$(dtb$(MTDPART)),$(kernel$(MTDPART)),$(riscvfw$(MTDPART)),$(rootfs$(MTDPART)),$(misc$(MTDPART)),$(ubia$(MTDPART))
cis$(MTDPART)			=	$(cis$(PATSIZE))(CIS)

# ipl
ipl$(RESOURCE)			=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/ipl/$(IPL_CONFIG)
ipl$(DATASIZE)			=	$(FLASH_BLK_SIZE)
ipl$(COPIES)			=	3
ipl$(PATSIZE)			=	$(call multiplyhex, $(ipl$(COPIES)), $(ipl$(DATASIZE)))
ipl$(MTDPART)			=	$(ipl$(PATSIZE))(IPL)

# ipl_cust
ipl_cust$(RESOURCE)		=	$(PROJ_ROOT)/board/$(CHIP)/boot/$(FLASH_TYPE)/ipl/$(IPL_CUST_CONFIG)
ipl_cust$(DATASIZE)		=	$(FLASH_BLK_SIZE)
ipl_cust$(COPIES)		=	3
ipl_cust$(PATSIZE)		=	$(call multiplyhex, $(ipl_cust$(COPIES)), $(ipl_cust$(DATASIZE)))
ipl_cust$(MTDPART)		=	$(ipl_cust$(PATSIZE))(IPL_CUST)

# uboot
uboot$(RESOURCE)		=	$(PROJ_ROOT)/board/uboot/$(UBOOT_BIN)
uboot$(DATASIZE)		=	0x80000
uboot$(COPIES)			=	1
uboot$(PATSIZE)			=	$(call sum, $(uboot$(DATASIZE)) $(call multiplyhex, $(FLASH_BLK_SIZE), 4))
uboot$(MTDPART)			=	$(uboot$(PATSIZE))(UBOOT)

# boot
boot$(RESOURCE)			=	$(IMAGEDIR)/boot.bin
boot$(PATSIZE)			=	$(call sum, $(ipl$(PATSIZE)) $(ipl_cust$(PATSIZE)) $(uboot$(PATSIZE)))
boot$(MTDPART)			=	$(boot$(PATSIZE))(BOOT),$(boot$(PATSIZE))(BOOT_BAK)
boot$(OTABLK)			=	/dev/mtd0 /dev/mtd1

# env
env$(PATSIZE)			=	0x40000
env$(MTDPART)			=	$(env$(PATSIZE))(ENV)

# kernel
kernel$(RESOURCE)		=	$(PROJ_ROOT)/kbuild/$(KERNEL_VERSION)/arch/$(ARCH)/boot/$(KERNEL_BIN)
ifneq ($(DEBUG), )
kernel$(DATASIZE)		=	0x700000
else
kernel$(DATASIZE)		=	0x500000
endif
kernel$(PATSIZE)		=	$(kernel$(DATASIZE))
kernel$(PATNAME)		=	KERNEL KERNEL_BACKUP
kernel$(BOOTENV)		=	$(KERNEL_BOOT_ENV)
kernel$(BOOTCMD)		=	loados nand $(KERNELBOOTADDR) KERNEL by_header\;
kernel$(BOOTREC)		=	loados nand $(KERNELBOOTADDR) KERNEL_BACKUP by_header\;
kernel$(MTDPART)		=	$(kernel$(PATSIZE))(KERNEL),$(kernel$(PATSIZE))(KERNEL_BACKUP)
kernel$(OTABLK)			=	/dev/mtd3 /dev/mtd4

# dtb
dtb$(RESOURCE)			=	$(PROJ_ROOT)/kbuild/$(KERNEL_VERSION)/arch/$(ARCH)/boot/dts/$(KERNEL_DTB_NAME)
dtb$(PATSIZE)			=	0x40000
dtb$(PATNAME)			=	DTB
dtb$(MTDPART)			=	$(dtb$(PATSIZE))(DTB)
dtb$(BOOTCMD)			=	nand read.e $(DTBBOOTADDR) DTB \$${dtb_file_size}\;

# riscvfw
riscvfw$(RESOURCE)		=	$(PROJ_ROOT)/board/$(CHIP)/riscv/$(RISCVFW_BIN)
riscvfw$(PATSIZE)		=	0x80000
riscvfw$(PATNAME)		=	RISCVFW
riscvfw$(MTDPART)		=	$(riscvfw$(PATSIZE))(RISCVFW)

# rootfs
rootfs$(RESOURCE)		=	$(OUTPUTDIR)/rootfs
rootfs$(FSTYPE)			=	squashfs
rootfs$(OPTIONS)		=	xz
rootfs$(PATSIZE)		=	0x600000
rootfs$(BOOTENV)		=	ubi.mtd=ubia,$(shell printf %d $(FLASH_PG_SIZE)) root=/dev/mtdblock7 rootfstype=squashfs ro init=/linuxrc
rootfs$(MTDPART)		=	$(rootfs$(PATSIZE))(rootfs)

# misc
misc$(RESOURCE)			=	$(OUTPUTDIR)/misc
misc$(FSTYPE)			=	fwfs
misc$(PATSIZE)			=	0x100000
misc$(PATNAME)			=	MISC
misc$(MOUNTTG)			=	/misc
misc$(MOUNTPT)			=	/dev/mtd8
misc$(MTDPART)			=	$(misc$(PATSIZE))(MISC)
misc$(OTABLK)			=	/dev/mtd8

# miservice
miservice$(RESOURCE)		=	$(OUTPUTDIR)/miservice/config
miservice$(FSTYPE)		=	ubifs
miservice$(UBIVOLID)		=	0
ifneq ($(DEBUG), )
miservice$(PATSIZE)		=	0x1600000
else
miservice$(PATSIZE)		=	0x1400000
endif
miservice$(MOUNTTG)		=	/config
miservice$(MOUNTPT)		=	ubi0:miservice
miservice$(OPTIONS)		=	ubia
miservice$(OTABLK)		=	/dev/ubi0_0

# customer
customer$(RESOURCE)		=	$(OUTPUTDIR)/customer
customer$(FSTYPE)		=	ubifs
customer$(UBIVOLID)		=	1
customer$(PATSIZE)		=	0x3580000
customer$(MOUNTTG)		=	/customer
customer$(MOUNTPT)		=	ubi0:customer
customer$(OPTIONS)		=	ubia
customer$(OTABLK)		=	/dev/ubi0_1
