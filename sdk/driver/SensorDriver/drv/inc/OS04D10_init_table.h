/* SigmaStar trade secret */
/* Copyright (c) [2019~2020] SigmaStar Technology.
All rights reserved.

Unless otherwise stipulated in writing, any and all information contained
herein regardless in any format shall remain the sole proprietary of
SigmaStar and be kept in strict confidence
(SigmaStar Confidential Information) by the recipient.
Any unauthorized act including without limitation unauthorized disclosure,
copying, use, reproduction, sale, distribution, modification, disassembling,
reverse engineering and compiling of the contents of SigmaStar Confidential
Information is unlawful and strictly prohibited. SigmaStar hereby reserves the
rights to any and all damages, losses, costs and expenses resulting therefrom.
*/

#ifndef _OS04D10_INIT_TABLE_H_

#define _OS04D10_PDWN_ON_ 0
#define _OS04D10_RST_ON_ 0

#define _OS04D10_RES_4M15_ 1
#define _OS04D10_RES_4M30_ 1
#define _OS04D10_RES_360P_FASTAE_ 1
#define _OS04D10_RES_360P_FASTAE_4M_ 1

#define OS04D10_PRESET_4M30 2
#define OS04D10_PRESET_4M15 1
#define OS04D10_PRESET_360P_FASTAE 0 //default use
#define OS04D10_PRESET_360P_FASTAE_4M 3

#define _MAX_SENSOR_PADID 3

static SENSOR_INIT_TABLE Sensor_init_table_4M30[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)

    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),
    /*sensor reset*/
    SNR_RST(_OS04D10_RST_ON_),      // reset off
    //os04d10 not have pwdn pin
    CMDQ_DELAY_MS(5),             // delay 5Ms
    SNR_RST(~_OS04D10_RST_ON_),      // reset off
    SNR_MCLK_EN(0x7),             // 0x0=MCLK 27MhZ, 0xB=37.125MHz
    CMDQ_DELAY_MS(8),             // delay 8Ms
#endif

    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x20,0x00),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x41,0xa8),
    I2CM_1A1D_W(0x78,0x45,0x24),
    I2CM_1A1D_W(0x78,0x31,0x20),
    I2CM_1A1D_W(0x78,0x38,0x15),
    I2CM_1A1D_W(0x78,0xfd,0x01),
    I2CM_1A1D_W(0x78,0x03,0x00),
    I2CM_1A1D_W(0x78,0x04,0x04),
    I2CM_1A1D_W(0x78,0x05,0x05),
    I2CM_1A1D_W(0x78,0x06,0xc2),
    I2CM_1A1D_W(0x78,0x24,0xff),
    I2CM_1A1D_W(0x78,0x02,0x01),
    I2CM_1A1D_W(0x78,0x42,0x5a),
    I2CM_1A1D_W(0x78,0x47,0x0c),
    I2CM_1A1D_W(0x78,0x45,0x02),
    I2CM_1A1D_W(0x78,0x48,0x0c),
    I2CM_1A1D_W(0x78,0x4b,0x88),
    I2CM_1A1D_W(0x78,0xd4,0x05),
    I2CM_1A1D_W(0x78,0xd5,0xd2),
    I2CM_1A1D_W(0x78,0xd7,0x05),
    I2CM_1A1D_W(0x78,0xd8,0xd2),
    I2CM_1A1D_W(0x78,0x50,0x01),
    I2CM_1A1D_W(0x78,0x51,0x11),
    I2CM_1A1D_W(0x78,0x52,0x18),
    I2CM_1A1D_W(0x78,0x53,0x01),
    I2CM_1A1D_W(0x78,0x54,0x01),
    I2CM_1A1D_W(0x78,0x55,0x01),
    I2CM_1A1D_W(0x78,0x57,0x08),
    I2CM_1A1D_W(0x78,0x5c,0x40),
    I2CM_1A1D_W(0x78,0x7c,0x06),
    I2CM_1A1D_W(0x78,0x7d,0x05),
    I2CM_1A1D_W(0x78,0x7e,0x05),
    I2CM_1A1D_W(0x78,0x7f,0x05),
    I2CM_1A1D_W(0x78,0x90,0x60),
    I2CM_1A1D_W(0x78,0x91,0x0f),
    I2CM_1A1D_W(0x78,0x92,0x35),
    I2CM_1A1D_W(0x78,0x93,0x36),
    I2CM_1A1D_W(0x78,0x94,0x0f),
    I2CM_1A1D_W(0x78,0x95,0x7e),
    I2CM_1A1D_W(0x78,0x98,0x5d),
    I2CM_1A1D_W(0x78,0xa8,0x50),
    I2CM_1A1D_W(0x78,0xaa,0x14),
    I2CM_1A1D_W(0x78,0xab,0x05),
    I2CM_1A1D_W(0x78,0xac,0x14),
    I2CM_1A1D_W(0x78,0xad,0x05),
    I2CM_1A1D_W(0x78,0xae,0x4a),
    I2CM_1A1D_W(0x78,0xaf,0x0e),
    I2CM_1A1D_W(0x78,0xb2,0x07),
    I2CM_1A1D_W(0x78,0xb3,0x0c),
    I2CM_1A1D_W(0x78,0xc9,0x28),
    I2CM_1A1D_W(0x78,0xca,0x5e),
    I2CM_1A1D_W(0x78,0xcb,0x5e),
    I2CM_1A1D_W(0x78,0xcc,0x5e),
    I2CM_1A1D_W(0x78,0xcd,0x5e),
    I2CM_1A1D_W(0x78,0xce,0x5c),
    I2CM_1A1D_W(0x78,0xcf,0x5c),
    I2CM_1A1D_W(0x78,0xd0,0x5c),
    I2CM_1A1D_W(0x78,0xd1,0x5c),
    I2CM_1A1D_W(0x78,0xd2,0x7c),
    I2CM_1A1D_W(0x78,0xd3,0x7c),
    I2CM_1A1D_W(0x78,0xdb,0x0f),
    I2CM_1A1D_W(0x78,0xfd,0x01),
    I2CM_1A1D_W(0x78,0x46,0x77),
    I2CM_1A1D_W(0x78,0xdd,0x00),
    I2CM_1A1D_W(0x78,0xde,0x3f),
    I2CM_1A1D_W(0x78,0xfd,0x03),
    I2CM_1A1D_W(0x78,0x2b,0x0a),
    I2CM_1A1D_W(0x78,0x01,0x22),
    I2CM_1A1D_W(0x78,0x02,0x03),
    I2CM_1A1D_W(0x78,0x00,0x06),
    I2CM_1A1D_W(0x78,0x2a,0x22),
    I2CM_1A1D_W(0x78,0x29,0x0b),
    I2CM_1A1D_W(0x78,0x1e,0x10),
    I2CM_1A1D_W(0x78,0x1f,0x02),
    I2CM_1A1D_W(0x78,0x1a,0x24),
    I2CM_1A1D_W(0x78,0x1b,0x62),
    I2CM_1A1D_W(0x78,0x1c,0xce),
    I2CM_1A1D_W(0x78,0x1d,0xd3),
    I2CM_1A1D_W(0x78,0x04,0x0f),
    I2CM_1A1D_W(0x78,0x36,0x00),
    I2CM_1A1D_W(0x78,0x37,0x05),
    I2CM_1A1D_W(0x78,0x38,0x09),
    I2CM_1A1D_W(0x78,0x39,0x19),
    I2CM_1A1D_W(0x78,0x3a,0x38),
    I2CM_1A1D_W(0x78,0x3b,0x22),
    I2CM_1A1D_W(0x78,0x3c,0x22),
    I2CM_1A1D_W(0x78,0x3d,0x22),
    I2CM_1A1D_W(0x78,0x3e,0x03),
    I2CM_1A1D_W(0x78,0xfd,0x02),
    I2CM_1A1D_W(0x78,0xce,0x65),
    I2CM_1A1D_W(0x78,0xfd,0x03),
    I2CM_1A1D_W(0x78,0x03,0x30),
    I2CM_1A1D_W(0x78,0x05,0x00),
    I2CM_1A1D_W(0x78,0x12,0x70),
    I2CM_1A1D_W(0x78,0x13,0x70),
    I2CM_1A1D_W(0x78,0x16,0x13),
    I2CM_1A1D_W(0x78,0x21,0xca),
    I2CM_1A1D_W(0x78,0x27,0x95),
    I2CM_1A1D_W(0x78,0x2c,0x55),
    I2CM_1A1D_W(0x78,0x2d,0x08),
    I2CM_1A1D_W(0x78,0x2e,0xca),
    I2CM_1A1D_W(0x78,0x3f,0xe7),
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x8b,0x01),
    I2CM_1A1D_W(0x78,0x8d,0x00),
    I2CM_1A1D_W(0x78,0xfd,0x01),
    I2CM_1A1D_W(0x78,0x01,0x02),
    I2CM_1A1D_W(0x78,0xfd,0x05),
    I2CM_1A1D_W(0x78,0xc4,0x62),
    I2CM_1A1D_W(0x78,0xc5,0x62),
    I2CM_1A1D_W(0x78,0xc6,0x62),
    I2CM_1A1D_W(0x78,0xc7,0x62),
    I2CM_1A1D_W(0x78,0xf0,0x40),
    I2CM_1A1D_W(0x78,0xf1,0x40),
    I2CM_1A1D_W(0x78,0xf2,0x40),
    I2CM_1A1D_W(0x78,0xf3,0x40),

    /*I2CM_1A1D_W(0x78,0xf0,0x00),
    I2CM_1A1D_W(0x78,0xf1,0x00),
    I2CM_1A1D_W(0x78,0xf2,0x00),
    I2CM_1A1D_W(0x78,0xf3,0x00),*/

    I2CM_1A1D_W(0x78,0xf4,0x00),
    I2CM_1A1D_W(0x78,0xf9,0x03),
    I2CM_1A1D_W(0x78,0xfa,0x5d),
    I2CM_1A1D_W(0x78,0xfb,0x6b),
    I2CM_1A1D_W(0x78,0xfd,0x02),
    I2CM_1A1D_W(0x78,0x5e,0x32),
    I2CM_1A1D_W(0x78,0xfd,0x02),
    I2CM_1A1D_W(0x78,0x92,0x03),
    I2CM_1A1D_W(0x78,0xa0,0x00),
    I2CM_1A1D_W(0x78,0xa1,0x04),
    I2CM_1A1D_W(0x78,0xa2,0x05),
    I2CM_1A1D_W(0x78,0xa3,0xa0),
    I2CM_1A1D_W(0x78,0xa4,0x00),
    I2CM_1A1D_W(0x78,0xa5,0x04),
    I2CM_1A1D_W(0x78,0xa6,0x0a),
    I2CM_1A1D_W(0x78,0xa7,0x00),
    I2CM_1A1D_W(0x78,0x8e,0x0a),
    I2CM_1A1D_W(0x78,0x8f,0x00),
    I2CM_1A1D_W(0x78,0x90,0x05),
    I2CM_1A1D_W(0x78,0x91,0xa0),

#if defined(SENSOR_INIT_CMDQ_MODE)
    /*Sensor runtime parameter*/
    //I2CM_1A1D_W(0x34,0x3001, 0x01),//group hold begin
    I2CM_1A1D_W(0x78,0xfd,0x01),//change sensor to page 01
    //I2CM_1A1D_W(0x78,0x01,0x00),
    SNR_SHUTTER_FPS_1A1D(0x78, 10000, 15000),   //shutter 10ms , fps 15
    SNR_GAIN_1A1D(0x78, 1024),
    SNR_ORIENTATION_1A1D(0x78, 0, 0),
    //I2CM_1A1D_W(0x34,0x3001, 0x00),//group hold end
#endif

    I2CM_1A1D_W(0x78,0xfd,0x05),
    I2CM_1A1D_W(0x78,0xb1,0x01),
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x20,0x03),
#if defined(SENSOR_INIT_CMDQ_MODE)
    SNR_STREAM_ONOFF_1A1D(0x78,1),
#endif

#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};


static SENSOR_INIT_TABLE Sensor_init_table_4M15[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)

    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),
    /*sensor reset*/
	SNR_RST(_OS04D10_RST_ON_),      // reset off
    CMDQ_DELAY_MS(5),             // delay 5Ms
	SNR_RST(~_OS04D10_RST_ON_),      // reset off
    SNR_MCLK_EN(0x7),             // 0x0=MCLK 27MhZ, 0xB=37.125MHz
    CMDQ_DELAY_MS(8),             // delay 8Ms
#endif
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x20,0x00),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x20,0x01),
    I2CM_1A1D_W(0x78,0x2e,0x35),

    I2CM_1A1D_W(0x78,0x31,0x20),
    I2CM_1A1D_W(0x78,0x38,0x15),
    I2CM_1A1D_W(0x78,0xfd,0x01),
    I2CM_1A1D_W(0x78,0x03,0x00),
    I2CM_1A1D_W(0x78,0x04,0x04),

    I2CM_1A1D_W(0x78,0x06,0x4f),
    I2CM_1A1D_W(0x78,0x24,0xff),
    I2CM_1A1D_W(0x78,0x42,0x59),
    I2CM_1A1D_W(0x78,0x45,0x02),
    I2CM_1A1D_W(0x78,0x48,0x0c),
    I2CM_1A1D_W(0x78,0x4b,0x88),
    I2CM_1A1D_W(0x78,0xd4,0x05),
    I2CM_1A1D_W(0x78,0xd5,0xd2),
    I2CM_1A1D_W(0x78,0xd7,0x05),
    I2CM_1A1D_W(0x78,0xd8,0xd2),
    I2CM_1A1D_W(0x78,0x50,0x01),
    I2CM_1A1D_W(0x78,0x51,0x11),
    I2CM_1A1D_W(0x78,0x52,0x18),
    I2CM_1A1D_W(0x78,0x53,0x01),
    I2CM_1A1D_W(0x78,0x54,0x01),
    I2CM_1A1D_W(0x78,0x55,0x01),
    I2CM_1A1D_W(0x78,0x57,0x08),
    I2CM_1A1D_W(0x78,0x5c,0x40),
    I2CM_1A1D_W(0x78,0x7c,0x1b),
    I2CM_1A1D_W(0x78,0x90,0x60),
    I2CM_1A1D_W(0x78,0x91,0x0f),
    I2CM_1A1D_W(0x78,0x92,0x30),
    I2CM_1A1D_W(0x78,0x93,0x3a),
    I2CM_1A1D_W(0x78,0x94,0x0f),
    I2CM_1A1D_W(0x78,0x95,0x84),
    I2CM_1A1D_W(0x78,0x98,0x5d),
    I2CM_1A1D_W(0x78,0xa8,0x50),
    I2CM_1A1D_W(0x78,0xaa,0x14),
    I2CM_1A1D_W(0x78,0xab,0x05),
    I2CM_1A1D_W(0x78,0xac,0x14),
    I2CM_1A1D_W(0x78,0xad,0x05),
    I2CM_1A1D_W(0x78,0xae,0x47),
    I2CM_1A1D_W(0x78,0xaf,0x10),
    I2CM_1A1D_W(0x78,0xc9,0x28),
    I2CM_1A1D_W(0x78,0xca,0x5e),
    I2CM_1A1D_W(0x78,0xcb,0x5e),
    I2CM_1A1D_W(0x78,0xcc,0x5e),
    I2CM_1A1D_W(0x78,0xcd,0x5e),
    I2CM_1A1D_W(0x78,0xce,0x5c),
    I2CM_1A1D_W(0x78,0xcf,0x5c),
    I2CM_1A1D_W(0x78,0xd0,0x5c),
    I2CM_1A1D_W(0x78,0xd1,0x5c),
    I2CM_1A1D_W(0x78,0xd2,0x7c),
    I2CM_1A1D_W(0x78,0xd3,0x7c),
    I2CM_1A1D_W(0x78,0xdb,0x2f),
    I2CM_1A1D_W(0x78,0xfd,0x01),
    I2CM_1A1D_W(0x78,0x46,0x77),
    I2CM_1A1D_W(0x78,0xdd,0x00),
    I2CM_1A1D_W(0x78,0xde,0x3f),
    I2CM_1A1D_W(0x78,0xfd,0x03),
    I2CM_1A1D_W(0x78,0x2b,0x0a),
    I2CM_1A1D_W(0x78,0x01,0x24),
    I2CM_1A1D_W(0x78,0x02,0x03),
    I2CM_1A1D_W(0x78,0x00,0x06),
    I2CM_1A1D_W(0x78,0x2a,0x22),
    I2CM_1A1D_W(0x78,0x29,0x13),
    I2CM_1A1D_W(0x78,0x1e,0x10),
    I2CM_1A1D_W(0x78,0x1f,0x02),
    I2CM_1A1D_W(0x78,0x1a,0x20),
    I2CM_1A1D_W(0x78,0x1b,0x5f),
    I2CM_1A1D_W(0x78,0x1c,0xc8),
    I2CM_1A1D_W(0x78,0x1d,0xca),
    I2CM_1A1D_W(0x78,0x04,0x0f),
    I2CM_1A1D_W(0x78,0x36,0x00),
    I2CM_1A1D_W(0x78,0x37,0x03),
    I2CM_1A1D_W(0x78,0x38,0x09),
    I2CM_1A1D_W(0x78,0x39,0x17),
    I2CM_1A1D_W(0x78,0x3a,0x34),
    I2CM_1A1D_W(0x78,0x3b,0x22),
    I2CM_1A1D_W(0x78,0x3c,0x22),
    I2CM_1A1D_W(0x78,0x3d,0x22),
    I2CM_1A1D_W(0x78,0x3e,0x13),
    I2CM_1A1D_W(0x78,0xfd,0x02),
    I2CM_1A1D_W(0x78,0xce,0x65),
    I2CM_1A1D_W(0x78,0xfd,0x03),
    I2CM_1A1D_W(0x78,0x03,0x30),
    I2CM_1A1D_W(0x78,0x05,0x00),
    I2CM_1A1D_W(0x78,0x12,0x20),
    I2CM_1A1D_W(0x78,0x13,0x40),
    I2CM_1A1D_W(0x78,0x21,0xca),
    I2CM_1A1D_W(0x78,0x27,0x85),
    I2CM_1A1D_W(0x78,0x2c,0x55),
    I2CM_1A1D_W(0x78,0x2d,0x08),
    I2CM_1A1D_W(0x78,0x2e,0xca),
    I2CM_1A1D_W(0x78,0x3f,0xe7),
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x8b,0x01),
    I2CM_1A1D_W(0x78,0x8d,0x00),
    I2CM_1A1D_W(0x78,0xfd,0x01),
    I2CM_1A1D_W(0x78,0x01,0x02),
    I2CM_1A1D_W(0x78,0xfd,0x05),
    I2CM_1A1D_W(0x78,0xf0,0x40),
    I2CM_1A1D_W(0x78,0xf1,0x40),
    I2CM_1A1D_W(0x78,0xf2,0x40),
    I2CM_1A1D_W(0x78,0xf3,0x40),
    /*I2CM_1A1D_W(0x78,0xf0,0x00),
    I2CM_1A1D_W(0x78,0xf1,0x00),
    I2CM_1A1D_W(0x78,0xf2,0x00),
    I2CM_1A1D_W(0x78,0xf3,0x00),*/

    I2CM_1A1D_W(0x78,0xf4,0x00),

    I2CM_1A1D_W(0x78,0xf9,0x03),
    I2CM_1A1D_W(0x78,0xfa,0x5d),
    I2CM_1A1D_W(0x78,0xfb,0x6b),
    I2CM_1A1D_W(0x78,0xfd,0x03),
    I2CM_1A1D_W(0x78,0x1d,0xd3),
    I2CM_1A1D_W(0x78,0x29,0x0b),
    I2CM_1A1D_W(0x78,0x1a,0x24),
    I2CM_1A1D_W(0x78,0x1b,0x62),
    I2CM_1A1D_W(0x78,0x1c,0xce),
    I2CM_1A1D_W(0x78,0x37,0x05),
    I2CM_1A1D_W(0x78,0x3e,0x03),
    I2CM_1A1D_W(0x78,0x01,0x22),
    I2CM_1A1D_W(0x78,0x3a,0x38),
    I2CM_1A1D_W(0x78,0x38,0x0b),
    I2CM_1A1D_W(0x78,0x39,0x19),
    I2CM_1A1D_W(0x78,0xfd,0x02),
    I2CM_1A1D_W(0x78,0x5e,0x32),
    I2CM_1A1D_W(0x78,0xfd,0x02),
    I2CM_1A1D_W(0x78,0x92,0x03),
    I2CM_1A1D_W(0x78,0xa0,0x00),
    I2CM_1A1D_W(0x78,0xa1,0x04),
    I2CM_1A1D_W(0x78,0xa2,0x05),
    I2CM_1A1D_W(0x78,0xa3,0xa0),
    I2CM_1A1D_W(0x78,0xa4,0x00),
    I2CM_1A1D_W(0x78,0xa5,0x04),
    I2CM_1A1D_W(0x78,0xa6,0x0a),
    I2CM_1A1D_W(0x78,0xa7,0x00),
    I2CM_1A1D_W(0x78,0x8e,0x0a),
    I2CM_1A1D_W(0x78,0x8f,0x00),
    I2CM_1A1D_W(0x78,0x90,0x05),
    I2CM_1A1D_W(0x78,0x91,0xb0),

#if defined(SENSOR_INIT_CMDQ_MODE)
   /*Sensor runtime parameter*/
    //I2CM_1A1D_W(0x34,0x3001, 0x01),//group hold begin
    I2CM_1A1D_W(0x78,0xfd,0x01),//change sensor to page 01
    //I2CM_1A1D_W(0x78,0x01,0x00),
    SNR_SHUTTER_FPS_1A1D(0x78, 10000, 15000),   //shutter 10ms , fps 15
    SNR_GAIN_1A1D(0x78, 1024),
    SNR_ORIENTATION_1A1D(0x78, 0, 0),
    //I2CM_1A1D_W(0x34,0x3001, 0x00),//group hold end
#endif

    I2CM_1A1D_W(0x78,0xfd,0x05),
    I2CM_1A1D_W(0x78,0xb1,0x01),
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x20,0x03),
#if defined(SENSOR_INIT_CMDQ_MODE)
    SNR_STREAM_ONOFF_1A1D(0x78,1),
#endif


#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};


static SENSOR_INIT_TABLE Sensor_init_table_360P120_FastAe[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)

    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),
    /*sensor reset*/
    SNR_RST(_OS04D10_RST_ON_),      // reset offn
    CMDQ_DELAY_MS(5),             // delay 5Ms
    SNR_RST(~_OS04D10_RST_ON_),      // reset off
    SNR_MCLK_EN(0x7),             // 0x0=MCLK 27MhZ, 0xB=37.125MHz
    CMDQ_DELAY_MS(8),             // delay 8Ms
#endif

    I2CM_1A1D_W(0x78,0xfd, 0x00),
    I2CM_1A1D_W(0x78,0x20, 0x00),
    I2CM_1A1D_W(0x78,0x20, 0x01),
    I2CM_1A1D_W(0x78,0x20, 0x01),
    I2CM_1A1D_W(0x78,0x20, 0x01),
    I2CM_1A1D_W(0x78,0x20, 0x01),
    I2CM_1A1D_W(0x78,0x41, 0xa8), //;dpll_nc
    I2CM_1A1D_W(0x78,0x45, 0x24), //;row_clk_div7
    I2CM_1A1D_W(0x78,0x30, 0x02), //;mpll clk div(mpll_predivp_sel)
    I2CM_1A1D_W(0x78,0x31, 0x24), //;row clk from dpll，dclk=pclk_in/4
    I2CM_1A1D_W(0x78,0x35, 0xc9), //;phy clk div(mpll_phy_clk_div_sel)
    I2CM_1A1D_W(0x78,0x38, 0x15), //;enable clk
    I2CM_1A1D_W(0x78,0xfd, 0x01),
    I2CM_1A1D_W(0x78,0x03, 0x00), //;exp 8msb
    I2CM_1A1D_W(0x78,0x04, 0xa5), //;exp 8lsb
    I2CM_1A1D_W(0x78,0x24, 0x10), //;again
    I2CM_1A1D_W(0x78,0x06, 0x01), //;vb 8lsb
    I2CM_1A1D_W(0x78,0x31, 0x26), //;binning4_en, v_binning_en,v_binning4_en
    I2CM_1A1D_W(0x78,0x02, 0x01), //;cms en
    I2CM_1A1D_W(0x78,0x42, 0x5a),
    I2CM_1A1D_W(0x78,0x47, 0x0c),
    I2CM_1A1D_W(0x78,0x45, 0x02), //;scg en
    I2CM_1A1D_W(0x78,0x48, 0x0c), //;vb_psv_exp_en,vb_psv_fl_en
    I2CM_1A1D_W(0x78,0x4b, 0x88), //;dummy row1,dummy row2
    I2CM_1A1D_W(0x78,0xd4, 0x05), //;ulp_fl_limit[15:8]
    I2CM_1A1D_W(0x78,0xd5, 0xd2), //;ulp_fl_limit[7:0], ulp_fl=1490
    I2CM_1A1D_W(0x78,0xd7, 0x05), //;ulp_exp_limit[15:8]
    I2CM_1A1D_W(0x78,0xd8, 0xd2), //;ulp_exp_limit[7:0], ulp_exp=1490
    I2CM_1A1D_W(0x78,0x50, 0x01), //;p50
    I2CM_1A1D_W(0x78,0x51, 0x11), //;p51
    I2CM_1A1D_W(0x78,0x52, 0x18), //;p52
    I2CM_1A1D_W(0x78,0x53, 0x01), //;p53
    I2CM_1A1D_W(0x78,0x54, 0x01), //;p54
    I2CM_1A1D_W(0x78,0x55, 0x01), //;p55
    I2CM_1A1D_W(0x78,0x57, 0x08), //;p57
    I2CM_1A1D_W(0x78,0x5c, 0x40), //;p5c
    I2CM_1A1D_W(0x78,0x7c, 0x06),
    I2CM_1A1D_W(0x78,0x7d, 0x05),
    I2CM_1A1D_W(0x78,0x7e, 0x05),
    I2CM_1A1D_W(0x78,0x7f, 0x05),
    I2CM_1A1D_W(0x78,0x90, 0x60), //;p90
    I2CM_1A1D_W(0x78,0x91, 0x0f), // ;p91
    I2CM_1A1D_W(0x78,0x92, 0x35), //;p92
    I2CM_1A1D_W(0x78,0x93, 0x36),
    I2CM_1A1D_W(0x78,0x94, 0x0f), // ;p94
    I2CM_1A1D_W(0x78,0x95, 0x7e), //;p95
    I2CM_1A1D_W(0x78,0x98, 0x5d), //;p98
    I2CM_1A1D_W(0x78,0xa8, 0x50), //;pa8
    I2CM_1A1D_W(0x78,0xaa, 0x14), //;paa
    I2CM_1A1D_W(0x78,0xab, 0x05), //;pab
    I2CM_1A1D_W(0x78,0xac, 0x14), //;pac
    I2CM_1A1D_W(0x78,0xad, 0x05), //;pad
    I2CM_1A1D_W(0x78,0xae, 0x4a), //;pae
    I2CM_1A1D_W(0x78,0xaf, 0x0e),
    I2CM_1A1D_W(0x78,0xb2, 0x07),
    I2CM_1A1D_W(0x78,0xb3, 0x0c),
    I2CM_1A1D_W(0x78,0xc9, 0x28), //;cap_s_pd_rst_en_hcg,cap_r_fd_rst_en_hcg
    I2CM_1A1D_W(0x78,0xca, 0x5e), //;p86_x1 sc1
    I2CM_1A1D_W(0x78,0xcb, 0x5e), //;p86_x2 sc1
    I2CM_1A1D_W(0x78,0xcc, 0x5e), //;p86_x3 sc1
    I2CM_1A1D_W(0x78,0xcd, 0x5e), //;p86_x4 sc1
    I2CM_1A1D_W(0x78,0xce, 0x5c), //;p88_x1 sc2
    I2CM_1A1D_W(0x78,0xcf, 0x5c), //;p88_x2 sc2
    I2CM_1A1D_W(0x78,0xd0, 0x5c), //;p88_x3 sc2
    I2CM_1A1D_W(0x78,0xd1, 0x5c), //;p88_x4 sc2
    I2CM_1A1D_W(0x78,0xd2, 0x7c), //;col cap10
    I2CM_1A1D_W(0x78,0xd3, 0x7c), //;col cap32
    I2CM_1A1D_W(0x78,0xdb, 0x0f),

    I2CM_1A1D_W(0x78,0xfd, 0x01),
    I2CM_1A1D_W(0x78,0x46, 0x77),
    I2CM_1A1D_W(0x78,0xdd, 0x00),
    I2CM_1A1D_W(0x78,0xde, 0x3f),
    I2CM_1A1D_W(0x78,0xfd, 0x03),
    I2CM_1A1D_W(0x78,0x2b, 0x0a),
    I2CM_1A1D_W(0x78,0x01, 0x22), //  ;24
    I2CM_1A1D_W(0x78,0x02, 0x03),
    I2CM_1A1D_W(0x78,0x00, 0x06),
    I2CM_1A1D_W(0x78,0x2a, 0x22),
    I2CM_1A1D_W(0x78,0x29, 0x0b), // ;13
    I2CM_1A1D_W(0x78,0x1e, 0x10),
    I2CM_1A1D_W(0x78,0x1f, 0x02),
    I2CM_1A1D_W(0x78,0x1a, 0x24), // ;20
    I2CM_1A1D_W(0x78,0x1b, 0x62), // ;5f
    I2CM_1A1D_W(0x78,0x1c, 0xce), //  ;c8
    I2CM_1A1D_W(0x78,0x1d, 0xd3), // ;ca
    I2CM_1A1D_W(0x78,0x04, 0x0f),
    I2CM_1A1D_W(0x78,0x36, 0x00),
    I2CM_1A1D_W(0x78,0x37, 0x05), //  ;03
    I2CM_1A1D_W(0x78,0x38, 0x09),
    I2CM_1A1D_W(0x78,0x39, 0x19), //  ;17
    I2CM_1A1D_W(0x78,0x3a, 0x38), //  ;34
    I2CM_1A1D_W(0x78,0x3b, 0x22),
    I2CM_1A1D_W(0x78,0x3c, 0x22),
    I2CM_1A1D_W(0x78,0x3d, 0x22),
    I2CM_1A1D_W(0x78,0x3e, 0x03), //  ;13

    I2CM_1A1D_W(0x78,0xfd, 0x02),
    I2CM_1A1D_W(0x78,0xc1, 0x05), //;tx speed area sel
    I2CM_1A1D_W(0x78,0x8c, 0x03), //;CLK trail
    I2CM_1A1D_W(0x78,0x8d, 0x01), //;CLK prepare
    I2CM_1A1D_W(0x78,0x95, 0x02), //;HS prepare
    I2CM_1A1D_W(0x78,0x98, 0x02), //;HS trail
    I2CM_1A1D_W(0x78,0x5e, 0x22), //;dig windown en, auto first en
    I2CM_1A1D_W(0x78,0xa1, 0x00), //;dig v start 8lsb
    I2CM_1A1D_W(0x78,0xa2, 0x01), //;dig v size 3msb
    I2CM_1A1D_W(0x78,0xa3, 0x68), //;dig v size 8lsb
    I2CM_1A1D_W(0x78,0xa5, 0x02), //;dig h start 8lsb
    I2CM_1A1D_W(0x78,0xa6, 0x02), //;dig h size 4msb
    I2CM_1A1D_W(0x78,0xa7, 0x80), //;dig h size 8lsb
    I2CM_1A1D_W(0x78,0x8e, 0x02), //;mipi hsize 4msb
    I2CM_1A1D_W(0x78,0x8f, 0x80), // ;mipi hsize 8lsb
    I2CM_1A1D_W(0x78,0x90, 0x01), //;mipi v size 3msb
    I2CM_1A1D_W(0x78,0x91, 0x68), //;mipi vsize 8lsb
    I2CM_1A1D_W(0x78,0xce, 0x65), //;frame end dly
    I2CM_1A1D_W(0x78,0xfd, 0x03),
    I2CM_1A1D_W(0x78,0x03, 0x30), //;vcap bias
    I2CM_1A1D_W(0x78,0x05, 0x00), //;adc range 551mv
    I2CM_1A1D_W(0x78,0x12, 0x70), //;rcnt_num[7:0]
    I2CM_1A1D_W(0x78,0x13, 0x70), //;scnt_num[7:0]
    I2CM_1A1D_W(0x78,0x16, 0x13), //;rst_num1_hcg_1x
    I2CM_1A1D_W(0x78,0x21, 0xca), //;vref_bsun_rst_hcg
    I2CM_1A1D_W(0x78,0x27, 0x95),
    I2CM_1A1D_W(0x78,0x2c, 0x55), // ;vn1=vn2=-1.3v
    I2CM_1A1D_W(0x78,0x2d, 0x08), //;vh=3.4v
    I2CM_1A1D_W(0x78,0x2e, 0xca), //;vref_bsun_rst_lcg
    I2CM_1A1D_W(0x78,0x3f, 0xe7), // ;vcap=2.2v
    I2CM_1A1D_W(0x78,0xfd, 0x00), //
    I2CM_1A1D_W(0x78,0x8b, 0x01), //;mipi p2s rst=0
    I2CM_1A1D_W(0x78,0x8d, 0x00), //;mipi pwd sel=0
    I2CM_1A1D_W(0x78,0xfd, 0x01),
    I2CM_1A1D_W(0x78,0x01, 0x02),
    I2CM_1A1D_W(0x78,0xfd, 0x05),
    I2CM_1A1D_W(0x78,0xc4, 0x62), //;blc k b
    I2CM_1A1D_W(0x78,0xc5, 0x62), //;blc k r
    I2CM_1A1D_W(0x78,0xc6, 0x62), //;blc k gr
    I2CM_1A1D_W(0x78,0xc7, 0x62), //;blc k gb
    I2CM_1A1D_W(0x78,0xce, 0x3e), //;blc
    I2CM_1A1D_W(0x78,0xf0,0x40),
    I2CM_1A1D_W(0x78,0xf1,0x40),
    I2CM_1A1D_W(0x78,0xf2,0x40),
    I2CM_1A1D_W(0x78,0xf3,0x40),
    /*I2CM_1A1D_W(0x78,0xf0,0x00),
    I2CM_1A1D_W(0x78,0xf1,0x00),
    I2CM_1A1D_W(0x78,0xf2,0x00),
    I2CM_1A1D_W(0x78,0xf3,0x00),*/
    I2CM_1A1D_W(0x78,0xf4, 0x00), // ;random gain limit
    I2CM_1A1D_W(0x78,0xf9, 0x03), // ;trig frame count
    I2CM_1A1D_W(0x78,0xfa, 0x5d), // ;blc trig en
    I2CM_1A1D_W(0x78,0xfb, 0x6b), // ;blc en, blc_bpc_en, blc_filter_en, random_en,4 frame average en

    I2CM_1A1D_W(0x78,0xb1, 0x01), //;mipi en
/*
    I2CM_1A1D_W(0x78,0xfd,0x01),
    I2CM_1A1D_W(0x78,0x03,0x03),
    I2CM_1A1D_W(0x78,0x04,0x6a),
    I2CM_1A1D_W(0x78,0x24,0xff),
    I2CM_1A1D_W(0x78,0x01,0x01),
*/
    I2CM_1A1D_W(0x78,0xfd, 0x01),
    I2CM_1A1D_W(0x78,0x33, 0x03),//enable AE clk

    I2CM_1A1D_W(0x78,0xfd, 0x00),
    I2CM_1A1D_W(0x78,0x38, 0x35),//enable AE clk
    I2CM_1A1D_W(0x78,0xfd, 0x02),
    I2CM_1A1D_W(0x78,0x81, 0x10),
    I2CM_1A1D_W(0x78,0x82, 0x2f),//target ae
    I2CM_1A1D_W(0x78,0x70, 0xcf),//bit3 ae en   bit[2:0] aec adjust max frame num
    //I2CM_1A1D_W(0x78,0x7b, 0x24),
    //I2CM_1A1D_W(0x78,0x77, 0x61),
    I2CM_1A1D_W(0x78,0x7b, 0x2c),//[3:2] max expo
    I2CM_1A1D_W(0x78,0x77, 0xfe),//[7:0], 0xff will gain=1

    //I2CM_1A1D_W(0x78,0xfd, 0x01),
    //I2CM_1A1D_W(0x78,0x33, 0x03),
    //I2CM_1A1D_W(0x78,0x01, 0x02),
    //I2CM_1A1D_W(0x78,0xfd, 0x00),
    //I2CM_1A1D_W(0x78,0x20, 0x03),
    I2CM_1A1D_W(0x78,0xfd,0x05),
    I2CM_1A1D_W(0x78,0xb1,0x00),
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x20,0x03),
/*
#if defined(SENSOR_INIT_CMDQ_MODE)
    SNR_STREAM_ONOFF_1A1D(0x78,1),
#else
    I2CM_1A1D_W(0x78,0xfd,0x05),
    I2CM_1A1D_W(0x78,0xb1,0x01),
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x20,0x03),
#endif
*/
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*Sensor runtime parameter*/
    //I2CM_1A1D_W(0x78,0xfd,0x01),//change sensor to page 01
    //SNR_SHUTTER_FPS_1A1D(0x78, 10000, 15000),   //shutter 10ms , fps 15
    //SNR_GAIN_1A1D(0x78, 1024),
    //SNR_ORIENTATION_1A1D(0x78, 0, 0),
#endif


#if defined(SENSOR_INIT_CMDQ_MODE)
    //set cmdq0 idle
    CMDQ_REG_DUMMY(CMDQ_STATUS_TEMP_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_TEMP_READY),

    //append dummy
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif

};

static SENSOR_INIT_TABLE Sensor_init_table_360P120_FastAe_changeto_1440P[] __attribute__((aligned(8)))=
{
//SNR_STREAM_ONOFF_1A1D(0x78,0),


///I2CM_1A1D_W(0x78,0xfd,0x01),
//I2CM_1A1D_W(0x78,0x33,0x02),

I2CM_1A1D_W(0x78,0xfd,0x00),
I2CM_1A1D_W(0x78,0x38,0x15),
I2CM_1A1D_W(0x78,0xfd,0x02),
I2CM_1A1D_W(0x78,0x81,0xff),
I2CM_1A1D_W(0x78,0x82,0x42),
I2CM_1A1D_W(0x78,0x70,0xc2),
I2CM_1A1D_W(0x78,0x7b,0x34),
//I2CM_1A1D_W(0x78,0xfd,0x00),
//I2CM_1A1D_W(0x78,0x20,0x03),


I2CM_1A1D_W(0x78,0xfd,0x00),
I2CM_1A1D_W(0x78,0x20,0x01),
I2CM_1A1D_W(0x78,0x20,0x01),
I2CM_1A1D_W(0x78,0x20,0x01),
I2CM_1A1D_W(0x78,0x20,0x01),
I2CM_1A1D_W(0x78,0x31,0x20),
I2CM_1A1D_W(0x78,0x35,0x09),

I2CM_1A1D_W(0x78,0xfd,0x01),
I2CM_1A1D_W(0x78,0x31,0x00),
I2CM_1A1D_W(0x78,0x01,0x01),

I2CM_1A1D_W(0x78,0xfd,0x02),
I2CM_1A1D_W(0x78,0xc1,0x03),
I2CM_1A1D_W(0x78,0x8c,0x07),
I2CM_1A1D_W(0x78,0x8d,0x05),
I2CM_1A1D_W(0x78,0x95,0x06),
I2CM_1A1D_W(0x78,0x98,0x08),
I2CM_1A1D_W(0x78,0x5e,0x32),
I2CM_1A1D_W(0x78,0x92,0x03),
I2CM_1A1D_W(0x78,0xa0,0x00),
I2CM_1A1D_W(0x78,0xa1,0x04),
I2CM_1A1D_W(0x78,0xa2,0x05),
I2CM_1A1D_W(0x78,0xa3,0xa0),
I2CM_1A1D_W(0x78,0xa4,0x00),
I2CM_1A1D_W(0x78,0xa5,0x04),
I2CM_1A1D_W(0x78,0xa6,0x0a),
I2CM_1A1D_W(0x78,0xa7,0x00),
I2CM_1A1D_W(0x78,0x8e,0x0a),
I2CM_1A1D_W(0x78,0x8f,0x00),
I2CM_1A1D_W(0x78,0x90,0x05),
I2CM_1A1D_W(0x78,0x91,0xb0),

I2CM_1A1D_W(0x78,0xfd,0x05),
I2CM_1A1D_W(0x78,0xce,0x0e),

I2CM_1A1D_W(0x78,0xf0,0x40),
I2CM_1A1D_W(0x78,0xf1,0x40),
I2CM_1A1D_W(0x78,0xf2,0x40),
I2CM_1A1D_W(0x78,0xf3,0x40),

/*I2CM_1A1D_W(0x78,0xf0,0x0),
I2CM_1A1D_W(0x78,0xf1,0x0),
I2CM_1A1D_W(0x78,0xf2,0x0),
I2CM_1A1D_W(0x78,0xf3,0x0),*/

I2CM_1A1D_W(0x78,0xfd,0x01),
I2CM_1A1D_W(0x78,0x45,0x02),
I2CM_1A1D_W(0x78,0x01,0x01),


#if defined(SENSOR_INIT_CMDQ_MODE)
        /*Sensor runtime parameter*/
        I2CM_1A1D_W(0x78,0xfd,0x01),//change sensor to page 01
        SNR_SHUTTER_FPS_1A1D(0x78, 10000, 15000),   //shutter 10ms , fps 15
        SNR_GAIN_1A1D(0x78, 1024),
        //I2CM_1A1D_W(0x78,0x01, 0x01),
        //SNR_ORIENTATION_1A1D(0x78, 0, 0),
#endif

    I2CM_1A1D_W(0x78,0xfd,0x05),
    I2CM_1A1D_W(0x78,0xb1,0x01),
    I2CM_1A1D_W(0x78,0xfd,0x00),
    I2CM_1A1D_W(0x78,0x20,0x03),
#if defined(SENSOR_INIT_CMDQ_MODE)
    SNR_STREAM_ONOFF_1A1D(0x78,1),
#endif


#if defined(SENSOR_INIT_CMDQ_MODE)
    //set cmdq0 idle
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    //append dummy
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};
#endif
