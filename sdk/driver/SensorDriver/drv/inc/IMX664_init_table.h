/* SigmaStar trade secret */
/* Copyright (c) [2019~2020] SigmaStar Technology.
All rights reserved.

Unless otherwise stipulated in writing, any and all information contained
herein regardless in any format shall remain the sole proprietary of
SigmaStar and be kept in strict confidence
(SigmaStar Confidential Information) by the recipient.
Any unauthorized act including without limitation unauthorized disclosure,
copying, use, reproduction, sale, distribution, modification, disassembling,
reverse engineering and compiling of the contents of SigmaStar Confidential
Information is unlawful and strictly prohibited. SigmaStar hereby reserves the
rights to any and all damages, losses, costs and expenses resulting therefrom.
*/

#ifndef _IMX664_INIT_TABLE_H_

#define _IMX664_PDWN_ON_ 0
#define _IMX664_RST_ON_ 0

//static CMDQ_CMDS gTable[] __attribute__((aligned(8))) =
static SENSOR_INIT_TABLE Sensor_init_table[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

    /*sensor reset*/
    SNR_PDWN(~_IMX664_PDWN_ON_),     //power on
    CMDQ_DELAY_10US(10),             //T1, delay 100us
    SNR_RST(~_IMX664_RST_ON_),       //reset off
    CMDQ_DELAY_MS(1),                //T3, delay 1ms

    SNR_RST(_IMX664_RST_ON_),       //reset off
    SNR_MCLK_EN(0xB),               //0x7=MCLK 27MhZ, 0xB=37.125MHz
    CMDQ_DELAY_10US(2),             //T2, delay 20us

    SNR_PDWN(_IMX664_PDWN_ON_),     //power off
    CMDQ_DELAY_10US(2),             //T1, delay 20us
    SNR_PDWN(~_IMX664_PDWN_ON_),    //power on
    CMDQ_DELAY_10US(2),             //T1, delay 20us
    SNR_RST(~_IMX664_RST_ON_),      //reset off
    CMDQ_DELAY_10US(2),             //T1, delay 20us

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    /*
    I2CM_REGW(reg_lcnt,16),
    I2CM_REGW(reg_hcnt,11),
    I2CM_REGW(reg_start_cnt,50),
    I2CM_REGW(reg_stop_cnt,50),
    I2CM_REGW(reg_data_lat_cnt,0),
    I2CM_REGW(reg_sda_cnt,11),
    */
    I2CM_PARAM(16,11,50,50,0,11),
#endif
    I2CM_2A1D_W(0x34,0x3000, 0x01),//Standby
    CMDQ_DELAY_MS(2),
    I2CM_2A1D_W(0x34,0x3002, 0x01),//Master mode stop
    CMDQ_DELAY_MS(2),
    I2CM_2A1D_W(0x34,0x3014, 0x04),
    I2CM_2A1D_W(0x34,0x3028, 0xE4),
    I2CM_2A1D_W(0x34,0x3029, 0x0C),
    I2CM_2A1D_W(0x34,0x3050, 0x08),
    I2CM_2A1D_W(0x34,0x30A6, 0x00),
    I2CM_2A1D_W(0x34,0x3148, 0x00),
    I2CM_2A1D_W(0x34,0x3412, 0x01),
    I2CM_2A1D_W(0x34,0x3460, 0x21),
    I2CM_2A1D_W(0x34,0x3492, 0x08),
    I2CM_2A1D_W(0x34,0x3930, 0x01),
    I2CM_2A1D_W(0x34,0x3B1D, 0x17),
    I2CM_2A1D_W(0x34,0x3C00, 0x0C),
    I2CM_2A1D_W(0x34,0x3C01, 0x0C),
    I2CM_2A1D_W(0x34,0x3C04, 0x02),
    I2CM_2A1D_W(0x34,0x3C08, 0x1E),
    I2CM_2A1D_W(0x34,0x3C09, 0x1D),
    I2CM_2A1D_W(0x34,0x3C0A, 0x1D),
    I2CM_2A1D_W(0x34,0x3C0B, 0x1D),
    I2CM_2A1D_W(0x34,0x3C0C, 0x1D),
    I2CM_2A1D_W(0x34,0x3C0D, 0x1D),
    I2CM_2A1D_W(0x34,0x3C0E, 0x1C),
    I2CM_2A1D_W(0x34,0x3C0F, 0x1B),
    I2CM_2A1D_W(0x34,0x3C30, 0x73),
    I2CM_2A1D_W(0x34,0x3C34, 0x03),
    I2CM_2A1D_W(0x34,0x3C3C, 0x20),
    I2CM_2A1D_W(0x34,0x3CB8, 0x00),
    I2CM_2A1D_W(0x34,0x3CBA, 0xFF),
    I2CM_2A1D_W(0x34,0x3CBB, 0x03),
    I2CM_2A1D_W(0x34,0x3CBC, 0xFF),
    I2CM_2A1D_W(0x34,0x3CBD, 0x03),
    I2CM_2A1D_W(0x34,0x3CC2, 0xFF),
    I2CM_2A1D_W(0x34,0x3CC8, 0xFF),
    I2CM_2A1D_W(0x34,0x3CC9, 0x03),
    I2CM_2A1D_W(0x34,0x3CCA, 0x00),
    I2CM_2A1D_W(0x34,0x3CCE, 0xFF),
    I2CM_2A1D_W(0x34,0x3CCF, 0x03),
    I2CM_2A1D_W(0x34,0x3CD0, 0xFF),
    I2CM_2A1D_W(0x34,0x3E00, 0x31),
    I2CM_2A1D_W(0x34,0x3E02, 0x04),
    I2CM_2A1D_W(0x34,0x3E03, 0x00),
    I2CM_2A1D_W(0x34,0x3E20, 0x04),
    I2CM_2A1D_W(0x34,0x3E21, 0x00),
    I2CM_2A1D_W(0x34,0x3E22, 0x31),
    I2CM_2A1D_W(0x34,0x3E24, 0xB0),
    I2CM_2A1D_W(0x34,0x3E2C, 0x38),
    I2CM_2A1D_W(0x34,0x4470, 0xFF),
    I2CM_2A1D_W(0x34,0x4471, 0x00),
    I2CM_2A1D_W(0x34,0x4478, 0x00),
    I2CM_2A1D_W(0x34,0x4479, 0xFF),
    I2CM_2A1D_W(0x34,0x4490, 0x05),
    I2CM_2A1D_W(0x34,0x4494, 0x19),
    I2CM_2A1D_W(0x34,0x4495, 0x00),
    I2CM_2A1D_W(0x34,0x4496, 0x55),
    I2CM_2A1D_W(0x34,0x4497, 0x01),
    I2CM_2A1D_W(0x34,0x4498, 0xA1),
    I2CM_2A1D_W(0x34,0x449A, 0xA0),
    I2CM_2A1D_W(0x34,0x449C, 0x9B),
    I2CM_2A1D_W(0x34,0x449E, 0x96),
    I2CM_2A1D_W(0x34,0x44A0, 0x91),
    I2CM_2A1D_W(0x34,0x44A2, 0x87),
    I2CM_2A1D_W(0x34,0x44A4, 0x7D),
    I2CM_2A1D_W(0x34,0x44A6, 0x78),
    I2CM_2A1D_W(0x34,0x44B8, 0xA1),
    I2CM_2A1D_W(0x34,0x44BA, 0xA0),
    I2CM_2A1D_W(0x34,0x44BC, 0x9B),
    I2CM_2A1D_W(0x34,0x44BE, 0x96),
    I2CM_2A1D_W(0x34,0x44C0, 0x91),
    I2CM_2A1D_W(0x34,0x44C2, 0x87),
    I2CM_2A1D_W(0x34,0x44C4, 0x7D),
    I2CM_2A1D_W(0x34,0x44C6, 0x78),
    I2CM_2A1D_W(0x34,0x44C8, 0xB6),
    I2CM_2A1D_W(0x34,0x44C9, 0x01),
    I2CM_2A1D_W(0x34,0x44CA, 0xB6),
    I2CM_2A1D_W(0x34,0x44CB, 0x01),
    I2CM_2A1D_W(0x34,0x44CC, 0xB1),
    I2CM_2A1D_W(0x34,0x44CD, 0x01),
    I2CM_2A1D_W(0x34,0x44CE, 0xB1),
    I2CM_2A1D_W(0x34,0x44CF, 0x01),
    I2CM_2A1D_W(0x34,0x44D0, 0xA7),
    I2CM_2A1D_W(0x34,0x44D1, 0x01),
    I2CM_2A1D_W(0x34,0x44D2, 0xA2),
    I2CM_2A1D_W(0x34,0x44D3, 0x01),
    I2CM_2A1D_W(0x34,0x44D4, 0xA2),
    I2CM_2A1D_W(0x34,0x44D5, 0x01),
    I2CM_2A1D_W(0x34,0x44D6, 0x93),
    I2CM_2A1D_W(0x34,0x44D7, 0x01),
    I2CM_2A1D_W(0x34,0x44E8, 0xB6),
    I2CM_2A1D_W(0x34,0x44E9, 0x01),
    I2CM_2A1D_W(0x34,0x44EA, 0xB6),
    I2CM_2A1D_W(0x34,0x44EB, 0x01),
    I2CM_2A1D_W(0x34,0x44EC, 0xB1),
    I2CM_2A1D_W(0x34,0x44ED, 0x01),
    I2CM_2A1D_W(0x34,0x44EE, 0xB1),
    I2CM_2A1D_W(0x34,0x44EF, 0x01),
    I2CM_2A1D_W(0x34,0x44F0, 0xA7),
    I2CM_2A1D_W(0x34,0x44F1, 0x01),
    I2CM_2A1D_W(0x34,0x44F2, 0xA2),
    I2CM_2A1D_W(0x34,0x44F3, 0x01),
    I2CM_2A1D_W(0x34,0x44F4, 0xA2),
    I2CM_2A1D_W(0x34,0x44F5, 0x01),
    I2CM_2A1D_W(0x34,0x44F6, 0x93),
    I2CM_2A1D_W(0x34,0x44F7, 0x01),
    I2CM_2A1D_W(0x34,0x4534, 0x22),
    I2CM_2A1D_W(0x34,0x4538, 0x22),
    I2CM_2A1D_W(0x34,0x4539, 0x22),
    I2CM_2A1D_W(0x34,0x453A, 0x22),
    I2CM_2A1D_W(0x34,0x453B, 0x22),
    I2CM_2A1D_W(0x34,0x453C, 0x22),
    I2CM_2A1D_W(0x34,0x453D, 0x22),
    I2CM_2A1D_W(0x34,0x453E, 0x22),
    I2CM_2A1D_W(0x34,0x453F, 0x22),
    I2CM_2A1D_W(0x34,0x4540, 0x22),
    I2CM_2A1D_W(0x34,0x4544, 0x22),
    I2CM_2A1D_W(0x34,0x4545, 0x22),
    I2CM_2A1D_W(0x34,0x4546, 0x22),
    I2CM_2A1D_W(0x34,0x4547, 0x22),
    I2CM_2A1D_W(0x34,0x4548, 0x22),
    I2CM_2A1D_W(0x34,0x4549, 0x22),
    I2CM_2A1D_W(0x34,0x454A, 0x22),
    I2CM_2A1D_W(0x34,0x454B, 0x22),
    I2CM_2A1D_W(0x34,0x454C, 0x22),
    I2CM_2A1D_W(0x34,0x4550, 0x22),
    I2CM_2A1D_W(0x34,0x4551, 0x22),
    I2CM_2A1D_W(0x34,0x4552, 0x22),
    I2CM_2A1D_W(0x34,0x4553, 0x22),
    I2CM_2A1D_W(0x34,0x4554, 0x22),
    I2CM_2A1D_W(0x34,0x4555, 0x22),
    I2CM_2A1D_W(0x34,0x4556, 0x22),
    I2CM_2A1D_W(0x34,0x4557, 0x22),
    I2CM_2A1D_W(0x34,0x4558, 0x22),
    I2CM_2A1D_W(0x34,0x455C, 0x22),
    I2CM_2A1D_W(0x34,0x455D, 0x22),
    I2CM_2A1D_W(0x34,0x455E, 0x22),
    I2CM_2A1D_W(0x34,0x455F, 0x22),
    I2CM_2A1D_W(0x34,0x4560, 0x22),
    I2CM_2A1D_W(0x34,0x4561, 0x22),
    I2CM_2A1D_W(0x34,0x4562, 0x22),
    I2CM_2A1D_W(0x34,0x4563, 0x22),
    I2CM_2A1D_W(0x34,0x4564, 0x22),
    I2CM_2A1D_W(0x34,0x4E30, 0x01),
    I2CM_2A1D_W(0x34,0x4E31, 0x00),
    I2CM_2A1D_W(0x34,0x4E32, 0x03),
    I2CM_2A1D_W(0x34,0x4E33, 0x02),

#if defined(SENSOR_INIT_CMDQ_MODE)
    /*Sensor runtime parameter*/
    I2CM_2A1D_W(0x34,0x3001, 0x01),//group hold begin
    SNR_SHUTTER_FPS_2A1D(0x34, 10000, 30000),   //shutter 10ms , fps 30
    SNR_GAIN_2A1D(0x34, 1024),
    I2CM_2A1D_W(0x34,0x3001, 0x00),//group hold end
#endif

    I2CM_2A1D_W(0x34,0x3002, 0x00),    //Master mode start
    CMDQ_DELAY_MS(10),//0xffff, 0x10
    I2CM_2A1D_W(0x34,0x3000, 0x00),    //Operating

#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};

#endif
