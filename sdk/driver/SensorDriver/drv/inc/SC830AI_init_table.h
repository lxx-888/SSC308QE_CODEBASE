/* SigmaStar trade secret */
/* Copyright (c) [2019~2020] SigmaStar Technology.
All rights reserved.

Unless otherwise stipulated in writing, any and all information contained
herein regardless in any format shall remain the sole proprietary of
SigmaStar and be kept in strict confidence
(SigmaStar Confidential Information) by the recipient.
Any unauthorized act including without limitation unauthorized disclosure,
copying, use, reproduction, sale, distribution, modification, disassembling,
reverse engineering and compiling of the contents of SigmaStar Confidential
Information is unlawful and strictly prohibited. SigmaStar hereby reserves the
rights to any and all damages, losses, costs and expenses resulting therefrom.
*/

#ifndef _SC830AI_INIT_TABLE_H_

#define _SC830AI_PDWN_ON_ 0
#define _SC830AI_RST_ON_ 0

static SENSOR_INIT_TABLE Sensor_init_table[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)

    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

    /*sensor reset*/
    SNR_RST(_SC830AI_RST_ON_),       //reset  off
    CMDQ_DELAY_MS(1),            // delay 500Us
    SNR_PDWN(_SC830AI_PDWN_ON_),     //power off
    CMDQ_DELAY_MS(1),            // delay 500Us
    SNR_MCLK_EN(0x0),               //0x0=MCLK 27MhZ, 0x7=24MHz
    SNR_PDWN(~_SC830AI_PDWN_ON_),    //power on
    CMDQ_DELAY_MS(1),            // delay 500Us
    SNR_RST(~_SC830AI_RST_ON_),      //reset on
    CMDQ_DELAY_MS(4),            // delay 500Us
    //SNR_MCLK_EN(0x4),               //0x0=MCLK 27MhZ, 0xB=37.125MHz

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    /*
    I2CM_REGW(reg_lcnt,16),
    I2CM_REGW(reg_hcnt,11),
    I2CM_REGW(reg_start_cnt,50),
    I2CM_REGW(reg_stop_cnt,50),
    I2CM_REGW(reg_data_lat_cnt,0),
    I2CM_REGW(reg_sda_cnt,11),
    */
    // I2CM_PARAM(16,11,50,50,0,11),  //from sc4238
    I2CM_PARAM(14,7,10,10,0,11), //lcnt, hcnt, start cnt, stop cnt, data late cnt, sda cnt
    // I2CM_PARAM(0x39,0x38,0x71,0x71,0x1C,0x1C), //lcnt, hcnt, start cnt, stop cnt, data late cnt, sda cnt
    // I2CM_PARAM(0x1b,0x1b,0x3c,0x3c,0x0f,0x0f), //lcnt, hcnt, start cnt, stop cnt, data late cnt, sda cnt

#endif

    I2CM_2A1D_W(0x60,0x0103,0x01),
    I2CM_2A1D_W(0x60,0x36e9,0x80),
    I2CM_2A1D_W(0x60,0x37f9,0x80),
    I2CM_2A1D_W(0x60,0x3018,0x32),
    I2CM_2A1D_W(0x60,0x3019,0x0c),
    I2CM_2A1D_W(0x60,0x301f,0x7e),
    I2CM_2A1D_W(0x60,0x3200,0x00),
    I2CM_2A1D_W(0x60,0x3201,0x00),
    I2CM_2A1D_W(0x60,0x3202,0x00),
    I2CM_2A1D_W(0x60,0x3203,0x00),
    I2CM_2A1D_W(0x60,0x3204,0x0f),
    I2CM_2A1D_W(0x60,0x3205,0x0f),
    I2CM_2A1D_W(0x60,0x3206,0x08),
    I2CM_2A1D_W(0x60,0x3207,0x7f),
    I2CM_2A1D_W(0x60,0x3208,0x0f),
    I2CM_2A1D_W(0x60,0x3209,0x00),
    I2CM_2A1D_W(0x60,0x320a,0x08),
    I2CM_2A1D_W(0x60,0x320b,0x78),
    I2CM_2A1D_W(0x60,0x320c,0x08),
    I2CM_2A1D_W(0x60,0x320d,0x34),
    I2CM_2A1D_W(0x60,0x320e,0x08),
    I2CM_2A1D_W(0x60,0x320f,0xca),
    I2CM_2A1D_W(0x60,0x3210,0x00),
    I2CM_2A1D_W(0x60,0x3211,0x07),
    I2CM_2A1D_W(0x60,0x3212,0x00),
    I2CM_2A1D_W(0x60,0x3213,0x03),
    I2CM_2A1D_W(0x60,0x3281,0x80),
    I2CM_2A1D_W(0x60,0x3301,0x0e),
    I2CM_2A1D_W(0x60,0x3303,0x18),
    I2CM_2A1D_W(0x60,0x3306,0x50),
    I2CM_2A1D_W(0x60,0x3308,0x20),
    I2CM_2A1D_W(0x60,0x3309,0xd0),
    I2CM_2A1D_W(0x60,0x330a,0x00),
    I2CM_2A1D_W(0x60,0x330b,0xd8),
    I2CM_2A1D_W(0x60,0x330c,0x20),
    I2CM_2A1D_W(0x60,0x330e,0x40),
    I2CM_2A1D_W(0x60,0x330f,0x08),
    I2CM_2A1D_W(0x60,0x3314,0x15),
    I2CM_2A1D_W(0x60,0x3317,0x07),
    I2CM_2A1D_W(0x60,0x3319,0x0c),
    I2CM_2A1D_W(0x60,0x331f,0xc1),
    I2CM_2A1D_W(0x60,0x3321,0x0c),
    I2CM_2A1D_W(0x60,0x3324,0x09),
    I2CM_2A1D_W(0x60,0x3325,0x09),
    I2CM_2A1D_W(0x60,0x3327,0x16),
    I2CM_2A1D_W(0x60,0x3328,0x10),
    I2CM_2A1D_W(0x60,0x3329,0x1c),
    I2CM_2A1D_W(0x60,0x332b,0x0d),
    I2CM_2A1D_W(0x60,0x3333,0x10),
    I2CM_2A1D_W(0x60,0x333e,0x0e),
    I2CM_2A1D_W(0x60,0x3352,0x0c),
    I2CM_2A1D_W(0x60,0x3353,0x0c),
    I2CM_2A1D_W(0x60,0x335e,0x06),
    I2CM_2A1D_W(0x60,0x335f,0x08),
    I2CM_2A1D_W(0x60,0x3364,0x5e),
    I2CM_2A1D_W(0x60,0x3366,0x01),
    I2CM_2A1D_W(0x60,0x337c,0x02),
    I2CM_2A1D_W(0x60,0x337d,0x0a),
    I2CM_2A1D_W(0x60,0x3390,0x01),
    I2CM_2A1D_W(0x60,0x3391,0x0b),
    I2CM_2A1D_W(0x60,0x3392,0x1f),
    I2CM_2A1D_W(0x60,0x3393,0x0e),
    I2CM_2A1D_W(0x60,0x3394,0x30),
    I2CM_2A1D_W(0x60,0x3395,0x30),
    I2CM_2A1D_W(0x60,0x3396,0x01),
    I2CM_2A1D_W(0x60,0x3397,0x0b),
    I2CM_2A1D_W(0x60,0x3398,0x1f),
    I2CM_2A1D_W(0x60,0x3399,0x09),
    I2CM_2A1D_W(0x60,0x339a,0x0e),
    I2CM_2A1D_W(0x60,0x339b,0x30),
    I2CM_2A1D_W(0x60,0x339c,0x30),
    I2CM_2A1D_W(0x60,0x339f,0x0e),
    I2CM_2A1D_W(0x60,0x33a2,0x04),
    I2CM_2A1D_W(0x60,0x33ad,0x3c),
    I2CM_2A1D_W(0x60,0x33af,0x68),
    I2CM_2A1D_W(0x60,0x33b1,0x80),
    I2CM_2A1D_W(0x60,0x33b2,0x58),
    I2CM_2A1D_W(0x60,0x33b3,0x40),
    I2CM_2A1D_W(0x60,0x33ba,0x0c),
    I2CM_2A1D_W(0x60,0x33f9,0x80),
    I2CM_2A1D_W(0x60,0x33fb,0xa0),
    I2CM_2A1D_W(0x60,0x33fc,0x4b),
    I2CM_2A1D_W(0x60,0x33fd,0x5f),
    I2CM_2A1D_W(0x60,0x349f,0x03),
    I2CM_2A1D_W(0x60,0x34a0,0x0e),
    I2CM_2A1D_W(0x60,0x34a6,0x4b),
    I2CM_2A1D_W(0x60,0x34a7,0x5f),
    I2CM_2A1D_W(0x60,0x34a8,0x20),
    I2CM_2A1D_W(0x60,0x34a9,0x10),
    I2CM_2A1D_W(0x60,0x34aa,0x01),
    I2CM_2A1D_W(0x60,0x34ab,0x10),
    I2CM_2A1D_W(0x60,0x34ac,0x01),
    I2CM_2A1D_W(0x60,0x34ad,0x28),
    I2CM_2A1D_W(0x60,0x34f8,0x5f),
    I2CM_2A1D_W(0x60,0x34f9,0x10),
    I2CM_2A1D_W(0x60,0x3630,0xc8),
    I2CM_2A1D_W(0x60,0x3632,0x46),
    I2CM_2A1D_W(0x60,0x3633,0x33),
    I2CM_2A1D_W(0x60,0x3637,0x2a),
    I2CM_2A1D_W(0x60,0x3638,0xc3),
    I2CM_2A1D_W(0x60,0x363c,0x40),
    I2CM_2A1D_W(0x60,0x363d,0x40),
    I2CM_2A1D_W(0x60,0x363e,0x70),
    I2CM_2A1D_W(0x60,0x3670,0x01),
    I2CM_2A1D_W(0x60,0x3674,0xc6),
    I2CM_2A1D_W(0x60,0x3675,0x8c),
    I2CM_2A1D_W(0x60,0x3676,0x8c),
    I2CM_2A1D_W(0x60,0x367c,0x4b),
    I2CM_2A1D_W(0x60,0x367d,0x5f),
    I2CM_2A1D_W(0x60,0x3698,0x82),
    I2CM_2A1D_W(0x60,0x3699,0x8d),
    I2CM_2A1D_W(0x60,0x369a,0x9c),
    I2CM_2A1D_W(0x60,0x369b,0xba),
    I2CM_2A1D_W(0x60,0x369e,0xba),
    I2CM_2A1D_W(0x60,0x369f,0x93),
    I2CM_2A1D_W(0x60,0x36a2,0x49),
    I2CM_2A1D_W(0x60,0x36a3,0x4b),
    I2CM_2A1D_W(0x60,0x36a4,0x4f),
    I2CM_2A1D_W(0x60,0x36a5,0x5f),
    I2CM_2A1D_W(0x60,0x36a6,0x5f),
    I2CM_2A1D_W(0x60,0x36d0,0x01),
    I2CM_2A1D_W(0x60,0x36ea,0x0a),
    I2CM_2A1D_W(0x60,0x36eb,0x05),
    I2CM_2A1D_W(0x60,0x36ec,0x13),
    I2CM_2A1D_W(0x60,0x36ed,0x22),
    I2CM_2A1D_W(0x60,0x370f,0x01),
    I2CM_2A1D_W(0x60,0x3721,0x9c),
    I2CM_2A1D_W(0x60,0x3722,0x03),
    I2CM_2A1D_W(0x60,0x3724,0x31),
    I2CM_2A1D_W(0x60,0x37b0,0x03),
    I2CM_2A1D_W(0x60,0x37b1,0x03),
    I2CM_2A1D_W(0x60,0x37b2,0x43),
    I2CM_2A1D_W(0x60,0x37b3,0x4b),
    I2CM_2A1D_W(0x60,0x37b4,0x4f),
    I2CM_2A1D_W(0x60,0x37fa,0x07),
    I2CM_2A1D_W(0x60,0x37fb,0x31),
    I2CM_2A1D_W(0x60,0x37fc,0x10),
    I2CM_2A1D_W(0x60,0x37fd,0x04),
    I2CM_2A1D_W(0x60,0x3901,0x00),
    I2CM_2A1D_W(0x60,0x3903,0x40),
    I2CM_2A1D_W(0x60,0x3905,0x4c),
    I2CM_2A1D_W(0x60,0x391e,0x09),
    I2CM_2A1D_W(0x60,0x3929,0x18),
    I2CM_2A1D_W(0x60,0x3933,0x80),
    I2CM_2A1D_W(0x60,0x3934,0x03),
    I2CM_2A1D_W(0x60,0x3935,0x00),
    I2CM_2A1D_W(0x60,0x3936,0x37),
    I2CM_2A1D_W(0x60,0x3937,0x6a),
    I2CM_2A1D_W(0x60,0x3938,0x6b),
    I2CM_2A1D_W(0x60,0x3e00,0x01),
    I2CM_2A1D_W(0x60,0x3e01,0x18),
    I2CM_2A1D_W(0x60,0x3e09,0x40),
    I2CM_2A1D_W(0x60,0x4819,0x30), // hs_zero
    I2CM_2A1D_W(0x60,0x481B,0x20), // hs_trail
    I2CM_2A1D_W(0x60,0x4827,0x20), // hs_prepare
    I2CM_2A1D_W(0x60,0x440e,0x02),
    I2CM_2A1D_W(0x60,0x450d,0x27),
    I2CM_2A1D_W(0x60,0x4837,0x0c),
    I2CM_2A1D_W(0x60,0x5010,0x01),
    I2CM_2A1D_W(0x60,0x5780,0x66),
    I2CM_2A1D_W(0x60,0x578d,0x40),
    I2CM_2A1D_W(0x60,0x5799,0x77),
    I2CM_2A1D_W(0x60,0x57aa,0xeb),
    I2CM_2A1D_W(0x60,0x57d9,0x00),
    I2CM_2A1D_W(0x60,0x5ae0,0xfe),
    I2CM_2A1D_W(0x60,0x5ae1,0x40),
    I2CM_2A1D_W(0x60,0x5ae2,0x38),
    I2CM_2A1D_W(0x60,0x5ae3,0x30),
    I2CM_2A1D_W(0x60,0x5ae4,0x28),
    I2CM_2A1D_W(0x60,0x5ae5,0x38),
    I2CM_2A1D_W(0x60,0x5ae6,0x30),
    I2CM_2A1D_W(0x60,0x5ae7,0x28),
    I2CM_2A1D_W(0x60,0x5ae8,0x3f),
    I2CM_2A1D_W(0x60,0x5ae9,0x34),
    I2CM_2A1D_W(0x60,0x5aea,0x2c),
    I2CM_2A1D_W(0x60,0x5aeb,0x3f),
    I2CM_2A1D_W(0x60,0x5aec,0x34),
    I2CM_2A1D_W(0x60,0x5aed,0x2c),
    I2CM_2A1D_W(0x60,0x5aee,0xfe),
    I2CM_2A1D_W(0x60,0x5aef,0x40),
    I2CM_2A1D_W(0x60,0x5af4,0x38),
    I2CM_2A1D_W(0x60,0x5af5,0x30),
    I2CM_2A1D_W(0x60,0x5af6,0x28),
    I2CM_2A1D_W(0x60,0x5af7,0x38),
    I2CM_2A1D_W(0x60,0x5af8,0x30),
    I2CM_2A1D_W(0x60,0x5af9,0x28),
    I2CM_2A1D_W(0x60,0x5afa,0x3f),
    I2CM_2A1D_W(0x60,0x5afb,0x34),
    I2CM_2A1D_W(0x60,0x5afc,0x2c),
    I2CM_2A1D_W(0x60,0x5afd,0x3f),
    I2CM_2A1D_W(0x60,0x5afe,0x34),
    I2CM_2A1D_W(0x60,0x5aff,0x2c),
    I2CM_2A1D_W(0x60,0x5f00,0x05),
    I2CM_2A1D_W(0x60,0x36e9,0x24),
    I2CM_2A1D_W(0x60,0x37f9,0x27),


#if defined(SENSOR_INIT_CMDQ_MODE)
    /*Sensor runtime parameter*/
    //I2CM_2A1D_W(0x34,0x3001, 0x01),//group hold begin
    SNR_SHUTTER_FPS_2A1D(0x60, 10000, 15000),   //shutter 10ms , fps 30
    SNR_GAIN_2A1D(0x60, 1024),
    //I2CM_2A1D_W(0x34,0x3001, 0x00),//group hold end
#endif
    I2CM_2A1D_W(0x60,0x0100,0x01),   //set manual sleep mode disable

#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};

#endif
