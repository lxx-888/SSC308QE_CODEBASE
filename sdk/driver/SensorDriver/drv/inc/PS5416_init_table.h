/* SigmaStar trade secret */
/* Copyright (c) [2019~2020] SigmaStar Technology.
All rights reserved.

Unless otherwise stipulated in writing, any and all information contained
herein regardless in any format shall remain the sole proprietary of
SigmaStar and be kept in strict confidence
(SigmaStar Confidential Information) by the recipient.
Any unauthorized act including without limitation unauthorized disclosure,
copying, use, reproduction, sale, distribution, modification, disassembling,
reverse engineering and compiling of the contents of SigmaStar Confidential
Information is unlawful and strictly prohibited. SigmaStar hereby reserves the
rights to any and all damages, losses, costs and expenses resulting therefrom.
*/

#ifndef _PS5416_INIT_TABLE_H_
#define PS5416_SNR_VER_C        (0x22)
#define PS5416_SNR_VER_D        (0x33)
#define PS5416_SNR_VER          (PS5416_SNR_VER_C)

#define _PS5416_HDR_SUPPORT_    (0)
#define _LPC_HW_SUPPORT_        (0) // i6e need LPC HW to connect sensor (ps5416 <-> LPC <-> i6e)

////////////////////////////////////
// I2C Info                       //
////////////////////////////////////
#define SENSOR_I2C_ADDR     0x98
#define LPC_I2C_ADDR        0xc2

////////////////////////////////////
// Mirror-Flip Info               //
////////////////////////////////////
#define ORIT_M0F0_VAL       0x00
#define ORIT_M1F0_VAL       0x08
#define ORIT_M0F1_VAL       0x04
#define ORIT_M1F1_VAL       0x0C

#define SNR_ORIT_INIT_VAL   ORIT_M1F0_VAL

////////////////////////////////////
// AE Info                        //
////////////////////////////////////

// Common
#define MIN_EXPO_LINE_COUNT                 3
#define SNR_MAX_GAIN                        (32 * 1024)
#define SNR_MIN_GAIN                        (1.51 * 1024)
#define OB_IN_12BIT                         (4096 >> 4)
#define STREAMING_MD_WOI_VSIZE              1520
#define STREAMING_MD_WOI_VSTART             8
#define SNR_LEF_INIT_EXPO_LINES             0x063E
#define SNR_LEF_INIT_GAIN_INDEX             8       // 2x
#define SNR_SEF_INIT_GAIN_INDEX             8       // 2x
#define PREROLL_MODE_HSIZE                  648//368
#define PREROLL_MODE_VSIZE                  360//368

// For Linear mode
#define VTS_LINEAR_30FPS                    1600    // R_Lpf + 1. R_Lpf[7:0]: Reg0x011E, R_Lpf[15:8]: Reg0x011F
#define PREVIEW_LINE_PERIOD_LINEAR_30FPS    20833   // (1/30)/VTS_LINEAR_30FPS = 0.00002083333 sec
// For HDR mode
#define VTS_HDR_30FPS                       1600    // R_Lpf + 1. R_Lpf[7:0]: Reg0x011E, R_Lpf[15:8]: Reg0x011F
#define PREVIEW_LINE_PERIOD_HDR_30FPS       10416   // (1/30/2)/VTS_HDR_30FPS = 0.00001041666 sec
#define HDR_MAX_EXPO_LINE(vts)              ((vts << 1) - 8)
#define SEF_MAX_EXPO_LINE(vts)              (((vts - STREAMING_MD_WOI_VSIZE - STREAMING_MD_WOI_VSTART) << 1) - 36)
#define LEF_MAX_EXPO_LINE(vts)              (HDR_MAX_EXPO_LINE(vts) - SEF_MAX_EXPO_LINE(vts))

#define VERSION_REG_HBYTE                   0x05B7
#define VERSION_REG_LBYTE                   0x05B8
#define PREROLL_EXPO_LINES_REG_LBYTE        0x0149
#define PREROLL_EXPO_LINES_REG_HBYTE        0x014A
#define PREROLL_GAIN_REG_LBYTE              0x014B
#define PREROLL_GAIN_REG_HBYTE              0x014C
#define WOI_HSTART_REG_LBYTE                0x01d3
#define WOI_HSTART_REG_HBYTE                0x01d4
#define WOI_VSTART_REG_LBYTE                0x01d5
#define WOI_VSTART_REG_HBYTE                0x01d6
#define VSTART_SEL_LBYTE                    0x01d7
#define VSTART_SEL_HBYTE                    0x01d8

#define MIPI_MODE_LINEAR                    (0x00 << 4)
#define MIPI_MODE_HDR                       (0x01 << 4)
#define OP_MODE_STREAMING                   0x03
#define OP_MODE_PREROLL                     0x04
#define OP_MODE_SUSPEND                     0x05
#define OP_MODE_IDLE                        0x01

#define PS5416_PREROLL_SSI_2BIT             (0) // 1:2bit 0:4bit
#define PS5416_PREROLL_SSI_4BIT_22MS        (1) // 1:22ms 0:44ms

typedef struct {
    unsigned long long u64Gain1024x;
    unsigned short u16RegVal;
} Gain_ARRAY;

const static Gain_ARRAY gastGainTable[] =
{
    {1546,  0x026},
    {1618,  0x02A},
    {1669,  0x02D},
    {1751,  0x031},
    {1802,  0x034},
    {1864,  0x037},
    {1946,  0x03B},
    {2007,  0x03E},
    {2048,  0x040},
    {2191,  0x046},
    {2314,  0x04B},
    {2580,  0x055},
    {2724,  0x05A},
    {2836,  0x05E},
    {2970,  0x062},
    {3092,  0x066},
    {3236,  0x06A},
    {3338,  0x06D},
    {3492,  0x071},
    {3604,  0x074},
    {3717,  0x077},
    {3881,  0x07B},
    {4014,  0x07E},
    {4096,  0x080},
    {4372,  0x086},
    {4618,  0x08B},
    {5151,  0x095},
    {5437,  0x09A},
    {5673,  0x09E},
    {5929,  0x0A2},
    {6185,  0x0A6},
    {6461,  0x0AA},
    {6676,  0x0AD},
    {6973,  0x0B1},
    {7199,  0x0B4},
    {7434,  0x0B7},
    {7762,  0x0BB},
    {8018,  0x0BE},
    {8192,  0x0C0},
    {8745,  0x0C6},
    {9236,  0x0CB},
    {10291, 0x0D5},
    {10865, 0x0DA},
    {11346, 0x0DE},
    {11848, 0x0E2},
    {12370, 0x0E6},
    {12913, 0x0EA},
    {13343, 0x0ED},
    {13937, 0x0F1},
    {14397, 0x0F4},
    {14868, 0x0F7},
    {15524, 0x0FB},
    {16036, 0x0FE},
    {16384, 0x100},
    {17490, 0x106},
    {18463, 0x10B},
    {20572, 0x115},
    {21719, 0x11A},
    {22682, 0x11E},
    {23685, 0x122},
    {24730, 0x126},
    {25825, 0x12A},
    {26675, 0x12D},
    {27863, 0x131},
    {28785, 0x134},
    {29727, 0x137},
    {31048, 0x13B},
    {32072, 0x13E},
    {32768, 0x140},
};
#ifndef _PS5416_MIPI_SSI_SWITCH_IN_IPL_EARLYINIT_
#if (_PRE_ROLL_MODE_ == 1)
#if (PS5416_SNR_VER == PS5416_SNR_VER_C)
#if 0 //2023 , AE dark issue
static SENSOR_INIT_TABLE Sensor_init_table_ps5416_linear_C[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

#ifdef _LPC_SUPPORT_
    /* power up sequence */
    SNR_MCLK_EN(0x7),               // MCLK 24MhZ
    CMDQ_DELAY_MS(2),
#else
    /*sensor reset*/
    SNR_RST(0),                    //Reset low
    CMDQ_DELAY_MS(1),
    SNR_RST(1),                    //Reset high
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(2),

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    I2CM_PARAM(16,11,50,50,0,11),
#endif
#endif

    // PS5416_2688x1520_30fps_MIPI_RAW12_Linear_Preroll_648x360_5fps_B06A_SPI_24M_2bit
    // Stream : MIPI 2688x1520 4Lane RAW12 Linear mode @ System_Clock=24MHz
    // Pre-roll : MIPI 648x360 5fps 
    // For PS5416 Ver_B / Ver_C chip setting

    // ============================================================================================================
    // ------------------------------------------------------------------------------------------------------------
    //
    //  Setting Version :   B06A
    //
    //  Release Date    :   2023/11/23 
    //
    //  Modify Items    :   
    //                      
    //
    // ============================================================================================================

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),//Add "Reset release" setting, can shorten t14 time after RSTN pin release (Valid only in I2C_SlaveID =I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x98) 
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),//R_FAE_Auto_EnH=0 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),//R_FAE_Skip=1 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082F, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x02), //R_SMD_En_PREROL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0), //VSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0), //HSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0), //PXCLK IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0), //PXDX IO 
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x01), //01: HSync inv & VSync inv
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),//non-continues mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),//R_HsEoT_prd=6 to satify MIPI timing spec.
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x11), //R_MIPI_FrameReset_by_RstN_En, R_MIPI_FrameReset_by_Vsync_En  
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08), 
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80), //R_TG_WOI_HSize = 2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a), //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D1, 0xF0), //R_TG_WOI_VSize = 1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, 0x05), //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D3, 0x04), //R_TG_WOI_HStart=4
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D5, 0x08), //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x005F, 0x00),//Rs_Np_Sel (2: Div 2^2 = 4, Frame rate/4) Sysclk_freq_Final=Sysclk_freq/(2^2)=24MHz
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x40), //R_LPF=1667->1600
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x06), //
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x29),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0xB0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xAC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xE0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0xB1), //T_OP_current_lvl_sel
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0661, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0705, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x52),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x88),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D1, 0x68),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D2, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D3, 0x00), //R_TG_WOI_HStart=8 for 648x360
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D5, 0x04), //R_TG_WOI_VStart=0 for 648x360
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x01), //R_TG_VStart_sel=3
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00), //d8 = R_TG_VStart_sel[9:8]
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x005F, 0x02),//Rs_Np_Sel (2: Div 2^2 = 4, Frame rate/4) Sysclk_freq_Final=Sysclk_freq/(2^2)=24MHz
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0xD8),//R_LPF=1667->"6668(DVP), 1667(SPI_24M) due to Np=2" for 5fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x0A),//R_LPF=1667->"6668(DVP), 1667(SPI_24M) due to Np=2" for 5fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2D99, 0x00), //R_SMD_WOI_VOffset
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2D9A, 0x00), //R_SMD_WOI_HOffset
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),//R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),//R_ExpGain_AutoCalc_Stream_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0149, 0x80),//R_ExpLine_PreRoll=1665 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014A, 0x20),//R_ExpLine_PreRoll=1665 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014B, 0xC0),//R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014C, 0x00),//R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, 0x3E),//R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, 0x06),//R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, 0x40),//R_GainIndex_Stream=64 (AG=2X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, 0x00),//R_GainIndex_Stream=64 (AG=2X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),//AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, 0x00),//R_TG_HFlip=0, R_TG_VFlip=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0035, 0x01),//R_SPIM_CLK_Div=1 (SPIM_CLK_freq=Sysclk_freq_Final/1=48MHz)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x04A0, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x04A1, 0x01),// 0:4bit, 1:2bit, 2:1bit (SPI 2bit mode)
     //0x005F,0x02//Rs_Np_Sel (2: Div 2^2 = 4, Frame rate/4) Sysclk_freq_Final=Sysclk_freq/(2^2)=24MHz
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B7, 0xB0),//B06A: Version (Dummy register)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B8, 0x6A),//B06A: Version (Dummy register)

#if defined(SENSOR_INIT_CMDQ_MODE)
#ifdef _LPC_SUPPORT_
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_LINEAR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box
#endif

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};
#endif //LINEAR C

#if 1 //2024/03/13 , AE OK
static SENSOR_INIT_TABLE Sensor_init_table_ps5416_linear_C[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)

    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_) // i6e reset is on lpc hw
    /* power up sequence */
    SNR_MCLK_EN(0x7),               // MCLK 24MhZ
    CMDQ_DELAY_MS(2),
#else
    /*sensor reset*/
    SNR_RST(0),                    //Reset low
    CMDQ_DELAY_MS(1),
    SNR_RST(1),                    //Reset high
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(2),

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    I2CM_PARAM(16,11,50,50,0,11),
#endif
#endif

#if PS5416_PREROLL_SSI_2BIT // 2bit
    // PS5416_2688x1520_30fps_MIPI_RAW12_Linear_Preroll_648x360_5fps_B06A_SPI_24M_2bit
    // Stream : MIPI 2688x1520 4Lane RAW12 Linear mode @ System_Clock=24MHz
    // Pre-roll : MIPI 648x368 3fps
    // For PS5416 Ver_B / Ver_C chip setting

    // ============================================================================================================
    // ------------------------------------------------------------------------------------------------------------
    //
    //  Setting Version :   D02A
    //
    //  Release Date    :   2024/03/13
    //
    //  Modify Items    :
    //
    //
    // ============================================================================================================

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),//Add "Reset release" setting, can shorten t14 time after RSTN pin release (Valid only in I2C_SlaveID = 0x98)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),//R_FAE_Auto_EnH=0 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),//R_FAE_Skip=1 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082F, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x02), //R_SMD_En_PREROL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0), //VSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0), //HSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0), //PXCLK IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0), //PXDX IO
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x31),     //31: HSync inv & VSync inv for SigmaStar Platform only
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x01), //01: HSync inv & VSync inv
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),//non-continues mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),//R_HsEoT_prd=6 to satify MIPI timing spec.
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x11), //R_MIPI_FrameReset_by_RstN_En, R_MIPI_FrameReset_by_Vsync_En
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80), //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a), //R_TG_WOI_HSize=2688
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, STREAMING_MD_WOI_VSIZE & 0xFF),    //R_TG_WOI_VSize=1520
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, STREAMING_MD_WOI_VSIZE >> 8),      //R_TG_WOI_VSize=1520
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_HSTART_REG_LBYTE, 0x04),     //R_TG_WOI_HStart=4
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, STREAMING_MD_WOI_VSTART & 0xFF),   //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, 0xf0),    //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, 0x05),      //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_HSTART_REG_LBYTE, 0x04),     //R_TG_WOI_HStart=4
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x08),   //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x005F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x40), //R_LPF=1667->1600
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x06), //
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x19),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0xB0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xAC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x52),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c9, 0x01),
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, PREROLL_MODE_HSIZE & 0xFF),    //R_TG_WOI_HSize=368
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, PREROLL_MODE_HSIZE >> 8),      //R_TG_WOI_HSize=368
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, PREROLL_MODE_VSIZE & 0xFF),    //R_TG_WOI_VSize=368
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, PREROLL_MODE_VSIZE >> 8),      //R_TG_WOI_VSize=368
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x00),           //R_TG_WOI_VStart=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x88),    //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x02),      //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, 0x70),    //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, 0x01),      //R_TG_WOI_VSize=368
#if 0//BGGR
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x00),           //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d3, 0x08),
#else //RGGB
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d3, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d5, 0x01),
#endif
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d5, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d7, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x005F, 0x02),//Rs_Np_Sel (2: Div 2^2 = 4, Frame rate/4) Sysclk_freq_Final=Sysclk_freq/(2^2)=24MHz
#if 0 //3fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0xD8),//R_LPF=1667->"6668(DVP), 2776 SPI_24M) due to Np=2" for 3fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x0A),//R_LPF=1667->"6668(DVP), 2776 SPI_24M) due to Np=2" for 3fps
#else //5fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x81),//R_LPF=1667->"6668(DVP), 2776 SPI_24M) due to Np=2" for 3fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x06),//R_LPF=1667->"6668(DVP), 2776 SPI_24M) due to Np=2" for 3fps
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),//R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),//R_ExpGain_AutoCalc_Stream_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_LBYTE, 0x8B),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_HBYTE, 0x20),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_LBYTE, 0xC0),             //R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_HBYTE, 0x00),             //R_GainIndex_PreRoll=38 (AG=1.509X)
    #if defined(SENSOR_INIT_CMDQ_MODE)
        SNR_SHUTTER_FPS_2A1D(SENSOR_I2C_ADDR, 10000, 30000),
        SNR_GAIN_2A1D(SENSOR_I2C_ADDR, 1024),
    #else
        I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, SNR_LEF_INIT_EXPO_LINES & 0xFF),   //R_ExpLine_Stream=1598 (R_LPF - 2)
        I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, SNR_LEF_INIT_EXPO_LINES >> 8),     //R_ExpLine_Stream=1598 (R_LPF - 2)
        I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, VTS_LINEAR_30FPS & 0xFF),
        I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, VTS_LINEAR_30FPS >> 8),
        I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),  //R_GainIndex_Stream=64 (AG=2X)
        I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal >> 8),    //R_GainIndex_Stream=64 (AG=2X)
        //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, 0x40),//R_GainIndex_Stream=64 (AG=2X)
        //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, 0x00),//R_GainIndex_Stream=64 (AG=2X)
    #endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, SNR_ORIT_INIT_VAL),
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0663, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0664, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0665, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0666, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0667, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0668, OB_IN_12BIT >> 8),
    // preroll cannot OB enable in autoae case
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0661, 0x01), // 0:Default value for stream state, 1:enable OB parameter in preroll state

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),//AE_UpdateFlag
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, 0x00),//R_TG_HFlip=0, R_TG_VFlip=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x0C),
#if 1 //_PS5416_PREROLL_AE_
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A0E, 0x5C), //R_AeFactor=5555 for LineTime_OSC=720 (648x360 or 648x368)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A0F, 0x11), //R_AeFactor=5555 for LineTime_OSC=720 (648x360 or 648x368)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A03, 0x01), //R_AE_EnH=1
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0035, 0x01),//R_SPIM_CLK_Div=1 (SPIM_CLK_freq=Sysclk_freq_Final/1=24MHz)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x04A0, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x04A1, 0x01),// 0:4bit, 1:2bit, 2:1bit (SPI 2bit mode)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_HBYTE, 0xD0),  //D02A: Version (Dummy register)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_LBYTE, 0x2A),  //D02A: Version (Dummy register)
#else // 4bit
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082F, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0896, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0898, 0x1A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x089A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x089C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x088D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, 0xf0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, 0x05),
#if 0 //BGGR
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D3, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d5, 0x08),
#else // RGGB
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D3, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d5, 0x0A),
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x005F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x19),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0xB0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xAC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x088D, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x52),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c9, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x88),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, 0x68),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, 0x01),
#if 0 //BGGR
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D3, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D5, 0x04),
#else //RGGB
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D3, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D5, 0x05),
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
#if PS5416_PREROLL_SSI_4BIT_22MS
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x005F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x06), //VTS
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x0D), //VTS
#else // 44ms
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x005F, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x83), //VTS
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x06), //VTS
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),
#if PS5416_PREROLL_SSI_4BIT_22MS
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0149, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014A, 0x0D),
#else
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0149, 0x81),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014A, 0x06),
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014B, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, 0x3E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x40), //VTS
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x06), //VTS
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, SNR_ORIT_INIT_VAL),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A06, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A10, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A12, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A03, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x04),
#if 1//_PS5416_PREROLL_AE_
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A0E, 0x5C), //R_AeFactor=5555 for LineTime_OSC=720 (648x360 or 648x368)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A0F, 0x11), //R_AeFactor=5555 for LineTime_OSC=720 (648x360 or 648x368)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0A03, 0x01), //R_AE_EnH=1
#endif
#if PS5416_PREROLL_SSI_4BIT_22MS
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0035, 0x02),
#else
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0035, 0x01),
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x04A0, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x04A1, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0663, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0664, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0665, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0666, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0667, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0668, OB_IN_12BIT >> 8),
    // preroll cannot OB enable in autoae case
    //I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0661, 0x01), // 0:Default value for stream state, 1:enable OB parameter in preroll state

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B7, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B8, 0x3B),

#endif

#if defined(SENSOR_INIT_CMDQ_MODE)
#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_)
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_LINEAR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box
#endif

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};
#endif
#endif // (PS5416_SNR_VER == PS5416_SNR_VER_C)


#if (PS5416_SNR_VER == PS5416_SNR_VER_D)
static SENSOR_INIT_TABLE Sensor_init_table_ps5416_linear_D[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_) // i6e reset is on lpc hw
    /* power up sequence */
    SNR_MCLK_EN(0x7),               // MCLK 24MhZ
    CMDQ_DELAY_MS(2),
#else
    /*sensor reset*/
    SNR_RST(0),                    //Reset low
    CMDQ_DELAY_MS(1),
    SNR_RST(1),                    //Reset high
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(2),

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    I2CM_PARAM(16,11,50,50,0,11),
#endif
#endif

    // PS5416_2688x1520_30fps_MIPI_RAW12_Linear_Preroll_648x360_5fps_B06A_SPI_24M_2bit
    // Stream : MIPI 2688x1520 4Lane RAW12 Linear mode @ System_Clock=24MHz
    // Pre-roll : MIPI 648x360 5fps 
    // For PS5416 VVer_D chip setting

    // ============================================================================================================
    // ------------------------------------------------------------------------------------------------------------
    //
    //  Setting Version :   B06A
    //
    //  Release Date    :   2023/11/23 
    //
    //  Modify Items    :   
    //                      
    //
    // ============================================================================================================

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),     //Add "Reset release" setting, can shorten t14 time after RSTN pin release (Valid only in I2C_SlaveID = 0x98)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),     //R_FAE_Auto_EnH=0 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),     //R_FAE_Skip=1 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x02),     //R_SMD_En_PREROL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x224A, 0x33),     //T_neg_pump_freq_sel
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0),     //VSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0),     //HSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0),     //PXCLK IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0),     //PXDX IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x31),     //31: HSync inv & VSync inv for SigmaStar Platform only
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),     //non-continues mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),     //R_HsEoT_prd=6 to satify MIPI timing spec.
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x10),     //R_MIPI_FrameReset_by_Vsync_En
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, STREAMING_MD_WOI_VSIZE & 0xFF),    //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, STREAMING_MD_WOI_VSIZE >> 8),      //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_HSTART_REG_LBYTE, 0x04),     //R_TG_WOI_HStart=4
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, STREAMING_MD_WOI_VSTART & 0xFF),   //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x19),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0x14),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x31),     //T_OP_current_lvl_sel
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x0E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c9, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, PREROLL_MODE_HSIZE & 0xFF),    //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, PREROLL_MODE_HSIZE >> 8),      //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, PREROLL_MODE_VSIZE & 0xFF),    //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, PREROLL_MODE_VSIZE >> 8),      //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x00),           //R_TG_WOI_VStart=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x8D),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x20),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_LBYTE, 0x8B),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_HBYTE, 0x20),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_LBYTE, 0x26),             //R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_HBYTE, 0x00),             //R_GainIndex_PreRoll=38 (AG=1.509X)
#if defined(SENSOR_INIT_CMDQ_MODE)
    SNR_SHUTTER_FPS_2A1D(SENSOR_I2C_ADDR, 10000, 30000),
    SNR_GAIN_2A1D(SENSOR_I2C_ADDR, 1024),
#else
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, SNR_LEF_INIT_EXPO_LINES & 0xFF),   //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, SNR_LEF_INIT_EXPO_LINES >> 8),     //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, VTS_LINEAR_30FPS & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, VTS_LINEAR_30FPS >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),  //R_GainIndex_Stream=64 (AG=2X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal >> 8),    //R_GainIndex_Stream=64 (AG=2X)
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, SNR_ORIT_INIT_VAL),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0663, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0664, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0665, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0666, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0667, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0668, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_HBYTE, 0xD0),  //D02A: Version (Dummy register)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_LBYTE, 0x2A),  //D02A: Version (Dummy register)

#if defined(SENSOR_INIT_CMDQ_MODE)
#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_)
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_LINEAR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box
#endif

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};
#endif // (PS5416_SNR_VER == PS5416_SNR_VER_D)
#else
#if (PS5416_SNR_VER == PS5416_SNR_VER_C)
static SENSOR_INIT_TABLE Sensor_init_table_ps5416_linear_C[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_) // i6e reset is on lpc hw
    /* power up sequence */
    SNR_MCLK_EN(0x7),               // MCLK 24MhZ
    CMDQ_DELAY_MS(2),
#else
    /*sensor reset*/
    SNR_RST(0),                    //Reset low
    CMDQ_DELAY_MS(1),
    SNR_RST(1),                    //Reset high
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(2),

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    I2CM_PARAM(16,11,50,50,0,11),
#endif
#endif

    // PS5416_2688x1520_RAW12_30fps_Linear_AllInOne_Pre-roll_368x368_5fps_CSP_20230705_B06A.asc
    // Change setting from : B05A setting
    // Stream : MIPI 2688x1520 4Lane RAW12 Linear mode @ System_Clock=24MHz
    // Pre-roll : DVP 368x368 5fps RAW8 Linear mode (Cencter setting, HStart_max=162)
    // For PS5416 Ver_B / Ver_C chip setting

    // ============================================================================================================
    // ------------------------------------------------------------------------------------------------------------
    //
    //  Setting Version :   B06A
    //
    //  Release Date    :   2023/7/5 (2023/7/5)
    //
    //  Modify Items    :   1. Modify dummy registers (05B7 ~ 05B8) for sensor initial setting version control
    //                      2. Note1: Pre-roll mode can support HStart_max=162
    //
    // ============================================================================================================

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),     //Add "Reset release" setting, can shorten t14 time after RSTN pin release (Valid only in I2C_SlaveID = 0x98)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),     //R_FAE_Auto_EnH=0 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),     //R_FAE_Skip=1 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x02),     //R_SMD_En_PREROL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0),     //VSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0),     //HSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0),     //PXCLK IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0),     //PXDX IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x31),     //31: HSync inv & VSync inv for SigmaStar Platform only
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),     //non-continues mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),     //R_HsEoT_prd=6 to satify MIPI timing spec.
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x10),     //R_MIPI_FrameReset_by_Vsync_En
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, STREAMING_MD_WOI_VSIZE & 0xFF),    //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, STREAMING_MD_WOI_VSIZE >> 8),      //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_HSTART_REG_LBYTE, 0x04),     //R_TG_WOI_HStart=4
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, STREAMING_MD_WOI_VSTART & 0xFF),   //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x19),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0x14),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x0E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c9, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, PREROLL_MODE_HSIZE & 0xFF),    //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, PREROLL_MODE_HSIZE >> 8),      //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, PREROLL_MODE_VSIZE & 0xFF),    //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, PREROLL_MODE_VSIZE >> 8),      //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x00),           //R_TG_WOI_VStart=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x8D),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x20),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_LBYTE, 0x8B),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_HBYTE, 0x20),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_LBYTE, 0x26),             //R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_HBYTE, 0x00),             //R_GainIndex_PreRoll=38 (AG=1.509X)
#if defined(SENSOR_INIT_CMDQ_MODE)
    SNR_SHUTTER_FPS_2A1D(SENSOR_I2C_ADDR, 10000, 30000),
    SNR_GAIN_2A1D(SENSOR_I2C_ADDR, 1024),
#else
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, SNR_LEF_INIT_EXPO_LINES & 0xFF),   //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, SNR_LEF_INIT_EXPO_LINES >> 8),     //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, VTS_LINEAR_30FPS & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, VTS_LINEAR_30FPS >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),  //R_GainIndex_Stream=64 (AG=2X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal >> 8),    //R_GainIndex_Stream=64 (AG=2X)
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, SNR_ORIT_INIT_VAL),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0663, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0664, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0665, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0666, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0667, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0668, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_HBYTE, 0xB0),  //B06A: Version (Dummy register)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_LBYTE, 0x6A),  //B06A: Version (Dummy register)

#if defined(SENSOR_INIT_CMDQ_MODE)
#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_)
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_LINEAR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box
#endif

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};
#endif // (PS5416_SNR_VER == PS5416_SNR_VER_C)
#if (PS5416_SNR_VER == PS5416_SNR_VER_D)
static SENSOR_INIT_TABLE Sensor_init_table_ps5416_linear_D[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_) // i6e reset is on lpc hw
    /* power up sequence */
    SNR_MCLK_EN(0x7),               // MCLK 24MhZ
    CMDQ_DELAY_MS(2),
#else
    /*sensor reset*/
    SNR_RST(0),                    //Reset low
    CMDQ_DELAY_MS(1),
    SNR_RST(1),                    //Reset high
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(2),

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    I2CM_PARAM(16,11,50,50,0,11),
#endif
#endif

    // PS5416_2688x1520_RAW12_30fps_Linear_AllInOne_Pre-roll_368x368_5fps_CSP_20230714_D02A.asc
    // Change setting from : D01A setting
    // Stream : MIPI 2688x1520 4Lane RAW12 Linear mode @ System_Clock=24MHz
    // Pre-roll : DVP 368x368 5fps RAW8 Linear mode (Cencter setting, HStart_max=162)
    // For PS5416 Ver_D chip setting (0x0002=0x33)

    // ============================================================================================================
    // ------------------------------------------------------------------------------------------------------------
    //
    //  Setting Version :   D02A
    //
    //  Release Date    :   2023/7/14 (2023/7/11)
    //
    //  Modify Items    :   1. Modify dummy registers (05B7 ~ 05B8) for sensor initial setting version control
    //                      2. Note1: Add optical center settings
    //                              -- Pre-roll mode can support HStart_max=162,
    //                              -- Pre-roll Context_Switch R_TG_WOI_HStart / R_TG_VStart_sel register has removed for factory calibration (Please refer to patch setting)
    //
    //
    // ============================================================================================================

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),     //Add "Reset release" setting, can shorten t14 time after RSTN pin release (Valid only in I2C_SlaveID = 0x98)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),     //R_FAE_Auto_EnH=0 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),     //R_FAE_Skip=1 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x02),     //R_SMD_En_PREROL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x224A, 0x33),     //T_neg_pump_freq_sel
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0),     //VSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0),     //HSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0),     //PXCLK IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0),     //PXDX IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x31),     //31: HSync inv & VSync inv for SigmaStar Platform only
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),     //non-continues mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),     //R_HsEoT_prd=6 to satify MIPI timing spec.
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x10),     //R_MIPI_FrameReset_by_Vsync_En
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, STREAMING_MD_WOI_VSIZE & 0xFF),    //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, STREAMING_MD_WOI_VSIZE >> 8),      //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_HSTART_REG_LBYTE, 0x04),     //R_TG_WOI_HStart=4
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, STREAMING_MD_WOI_VSTART & 0xFF),   //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x19),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0x14),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x31),     //T_OP_current_lvl_sel
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x0E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c9, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, PREROLL_MODE_HSIZE & 0xFF),    //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, PREROLL_MODE_HSIZE >> 8),      //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, PREROLL_MODE_VSIZE & 0xFF),    //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, PREROLL_MODE_VSIZE >> 8),      //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x00),           //R_TG_WOI_VStart=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x8D),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x20),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_LBYTE, 0x8B),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_HBYTE, 0x20),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_LBYTE, 0x26),             //R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_HBYTE, 0x00),             //R_GainIndex_PreRoll=38 (AG=1.509X)
#if defined(SENSOR_INIT_CMDQ_MODE)
    SNR_SHUTTER_FPS_2A1D(SENSOR_I2C_ADDR, 10000, 30000),
    SNR_GAIN_2A1D(SENSOR_I2C_ADDR, 1024),
#else
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, SNR_LEF_INIT_EXPO_LINES & 0xFF),   //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, SNR_LEF_INIT_EXPO_LINES >> 8),     //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, VTS_LINEAR_30FPS & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, VTS_LINEAR_30FPS >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),  //R_GainIndex_Stream=64 (AG=2X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal >> 8),    //R_GainIndex_Stream=64 (AG=2X)
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, SNR_ORIT_INIT_VAL),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0663, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0664, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0665, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0666, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0667, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0668, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_HBYTE, 0xD0),  //D02A: Version (Dummy register)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_LBYTE, 0x2A),  //D02A: Version (Dummy register)

#if defined(SENSOR_INIT_CMDQ_MODE)
#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_)
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_LINEAR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box
#endif

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};
#endif // (PS5416_SNR_VER == PS5416_SNR_VER_D)
#endif // (_PRE_ROLL_MODE_ == 1)

#if defined(SENSOR_INIT_CMDQ_MODE) && defined(_LPC_SUPPORT_) && _LPC_HW_SUPPORT_
static SENSOR_INIT_TABLE Sensor_switch_to_streaming_mode_ps5416_linear[] __attribute__((aligned(8)))=
{
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10101ef4, 0x08),    // Waiting time
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10101e46, 0x01),    // Enable bypass mode

    // Stop 8051
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10113610, 0x02),
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10101e08, 0x00),

    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10103910, 0x00),    // Stop LPC SPTimer 1 to avoid it sends exception interrupt

    SNR_SHUTTER_FPS_2A1D(SENSOR_I2C_ADDR, 10000, 30000),
    SNR_GAIN_2A1D(SENSOR_I2C_ADDR, 1024),

    SNR_MCLK_EN(0x7),               // MCLK 24MhZ

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x85),
    CMDQ_DELAY_MS(10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EE, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),

    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_LINEAR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
};
#endif
#if _PS5416_HDR_SUPPORT_
static SENSOR_INIT_TABLE Sensor_init_table_ps5416_hdr_C[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_) // i6e reset is on lpc hw
    /* power up sequence */
    SNR_MCLK_EN(0x7),               // MCLK 24MhZ
    CMDQ_DELAY_MS(2),
#else
    /*sensor reset*/
    SNR_RST(0),                    //Reset low
    CMDQ_DELAY_MS(1),
    SNR_RST(1),                    //Reset high
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(2),

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    I2CM_PARAM(16,11,50,50,0,11),
#endif
#endif

    // PS5416_2688x1520_RAW10_30fps_DOL_AllInOne_Pre-roll_368x368_5fps_CSP_20230705_B06A.asc
    // Change setting from : B05A setting
    // Stream : MIPI 2688x1520 4Lane RAW10 DOL mode @ System_Clock=24MHz
    // Pre-roll : DVP 368x368 5fps RAW8 Linear mode (Cencter setting, HStart_max=162)
    // For PS5416 Ver_B / Ver_C chip setting

    // ============================================================================================================
    // ------------------------------------------------------------------------------------------------------------
    //
    //  Setting Version :   B06A
    //
    //  Release Date    :   2023/7/5 (2023/7/5)
    //
    //  Modify Items    :   1. Modify dummy registers (05B7 ~ 05B8) for sensor initial setting version control
    //                      2. Note1: Pre-roll mode can support HStart_max=162
    //
    // ============================================================================================================

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),     //Add "Reset release" setting, can shorten t14 time after RSTN pin release (Valid only in I2C_SlaveID = 0x98)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),     //R_FAE_Auto_EnH=0 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),     //R_FAE_Skip=1 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x81),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EE, 0x5E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x02),     //R_SMD_En_PREROL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0),     //VSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0),     //HSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0),     //PXCLK IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0),     //PXDX IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x31),     //31: HSync inv & VSync inv for SigmaStar Platform only
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),     //non-continues mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),     //R_HsEoT_prd=6 to satify MIPI timing spec
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x11),     //R_MIPI_FrameReset_by_Vsync_En
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x34),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, STREAMING_MD_WOI_VSIZE & 0xFF),    //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, STREAMING_MD_WOI_VSIZE >> 8),      //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_HSTART_REG_LBYTE, 0x04),     //R_TG_WOI_HStart=4
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, STREAMING_MD_WOI_VSTART & 0xFF),   //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0126, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x25),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x19),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0x14),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x0E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c9, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, PREROLL_MODE_HSIZE & 0xFF),    //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, PREROLL_MODE_HSIZE >> 8),      //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, PREROLL_MODE_VSIZE & 0xFF),    //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, PREROLL_MODE_VSIZE >> 8),      //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x00),           //R_TG_WOI_VStart=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0126, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x8D),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x20),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0506, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055c, 0x03),     //R_MIPI_FrameStart_Early_EnH=0 for DOL mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056e, 0xf4),     //R_MIPI_Start_Rd_size=500 for DOL mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056f, 0x01),     //R_MIPI_Start_Rd_size=500 for DOL mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),     //R_ExpGain_AutoCalc_Stream_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_LBYTE, 0x8B),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_HBYTE, 0x20),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_LBYTE, 0x26),             //R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_HBYTE, 0x00),             //R_GainIndex_PreRoll=38 (AG=1.509X)
#if defined(SENSOR_INIT_CMDQ_MODE)
    // TODO : Fix SNR_SHUTTER_FPS_2A1D_HDR compile error
    //SNR_SHUTTER_FPS_2A1D_HDR(SENSOR_I2C_ADDR, 10000, 30000),
    //SNR_GAIN_2A1D_HDR(SENSOR_I2C_ADDR, 1024),
#else
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, SNR_LEF_INIT_EXPO_LINES & 0xFF),   //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, SNR_LEF_INIT_EXPO_LINES >> 8),     //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0152, 0x46),                             //R_ExpLine_short_Stream=70
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0153, 0x00),                             //R_ExpLine_short_Stream=70
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, VTS_HDR_30FPS & 0xFF),             //R_LPF=1600 for Stream 30fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, VTS_HDR_30FPS >> 8),               //R_LPF=1600 for Stream 30fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0127, LEF_MAX_EXPO_LINE(VTS_HDR_30FPS) & 0xFF),    //R_ExpLine_long_max=3084 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0128, LEF_MAX_EXPO_LINE(VTS_HDR_30FPS) >> 8),      //R_ExpLine_long_max=3084 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0129, SEF_MAX_EXPO_LINE(VTS_HDR_30FPS) & 0xFF),    //R_ExpLine_short_max=108 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x012A, SEF_MAX_EXPO_LINE(VTS_HDR_30FPS) >> 8),      //R_ExpLine_short_max=108 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0154, gastGainTable[SNR_SEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0155, gastGainTable[SNR_SEF_INIT_GAIN_INDEX].u16RegVal >> 8),
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x012B, 0x02),     //R_ShortExp_max_chg_Mask_LongFrame=1
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, SNR_ORIT_INIT_VAL),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0663, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0664, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0665, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0666, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0667, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0668, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0669, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066a, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066b, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066c, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066d, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066e, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_HBYTE, 0xB0),      //B06A: Version (Dummy register)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_LBYTE, 0x6A),      //B06A: Version (Dummy register)

#if defined(SENSOR_INIT_CMDQ_MODE)
#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_)
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_HDR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box
#endif

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};

static SENSOR_INIT_TABLE Sensor_init_table_ps5416_hdr_D[] __attribute__((aligned(8)))=
{
#if defined(SENSOR_INIT_CMDQ_MODE)
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_) // i6e reset is on lpc hw
    /* power up sequence */
    SNR_MCLK_EN(0x7),               // MCLK 24MhZ
    CMDQ_DELAY_MS(2),
#else
    /*sensor reset*/
    SNR_RST(0),                    //Reset low
    CMDQ_DELAY_MS(1),
    SNR_RST(1),                    //Reset high
    SNR_MCLK_EN(0x7),              //MCLK 24MhZ
    CMDQ_DELAY_MS(2),

    /*I2C timing*/
    I2CM_CLK_EN(0x2),  //12MHz
    I2CM_PARAM(16,11,50,50,0,11),
#endif
#endif

    // PS5416_2688x1520_RAW10_30fps_DOL_AllInOne_Pre-roll_368x368_5fps_CSP_20230714_D02A.asc
    // Change setting from : D01A setting
    // Stream : MIPI 2688x1520 4Lane RAW10 DOL mode @ System_Clock=24MHz
    // Pre-roll : DVP 368x368 5fps RAW8 Linear mode (Cencter setting, HStart_max=162)
    // For PS5416 Ver_D chip setting (0x0002=0x33)

    // ============================================================================================================
    // ------------------------------------------------------------------------------------------------------------
    //
    //  Setting Version :   D02A
    //
    //  Release Date    :   2023/7/14 (2023/7/11)
    //
    //  Modify Items    :   1. Modify dummy registers (05B7 ~ 05B8) for sensor initial setting version control
    //                      2. Note1: Add optical center settings
    //                              -- Pre-roll mode can support HStart_max=162,
    //                              -- Pre-roll Context_Switch R_TG_WOI_HStart / R_TG_VStart_sel register has removed for factory calibration (Please refer to patch setting)
    //
    // ============================================================================================================

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00FF, 0xA5),     //Add "Reset release" setting, can shorten t14 time after RSTN pin release (Valid only in I2C_SlaveID = 0x98)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A9, 0x00),     //R_FAE_Auto_EnH=0 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00A8, 0x02),     //R_FAE_Skip=1 due to customer no used
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x81),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EE, 0x5E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x238F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D8, 0x17),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D4, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2228, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0709, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079A, 0xF5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079C, 0x13),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x079D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0220, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0222, 0x12),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0224, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0226, 0x24),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0228, 0x2F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022A, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x022C, 0x1B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0230, 0x6F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0234, 0x23),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CE, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02CF, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02EF, 0x1C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02F1, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0736, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0737, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073C, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073D, 0x0B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0752, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075C, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0762, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0770, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0778, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077E, 0xB1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077F, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0784, 0xA7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B5, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BD, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0805, 0xEB),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0806, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080B, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081B, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081C, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0830, 0x1F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086F, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0870, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0871, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0872, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0873, 0x9B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0875, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0876, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0877, 0xB9),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0879, 0xB4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x087B, 0xA5),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0107, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x000C, 0x02),     //R_SMD_En_PREROL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2256, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x224A, 0x33),     //T_neg_pump_freq_sel
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0723, 0x78),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0724, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0725, 0xF0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0726, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0734, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0735, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073A, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x073B, 0x05),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0750, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075A, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0760, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076E, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0776, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077C, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077D, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0782, 0x5F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B3, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BB, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07BC, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0803, 0x8B),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0809, 0x53),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0861, 0x2C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0863, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0865, 0xA0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0867, 0xBE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0869, 0xC8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086A, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086B, 0xC3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086C, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x086D, 0x5A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0819, 0x33),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x081A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082D, 0x31),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082E, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0552, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056E, 0xFE),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0732, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0733, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0738, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0739, 0x0A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x074E, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0758, 0x6E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x075E, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076C, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x076D, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0774, 0x26),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0775, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077A, 0x49),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x077B, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0780, 0xAF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B1, 0xB2),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07B9, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0801, 0x7F),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0802, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0807, 0x47),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0811, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0812, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0817, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0818, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0825, 0x7A),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0826, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082B, 0xA8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x082C, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0853, 0xBC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0855, 0xB7),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0857, 0xF4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0859, 0x44),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085A, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085B, 0x22),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085D, 0x1D),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x085F, 0xAA),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007b, 0xC0),     //VSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007c, 0xC0),     //HSYNC IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007d, 0xC0),     //PXCLK IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x007e, 0xC0),     //PXDX IO
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00af, 0x31),     //31: HSync inv & VSync inv for SigmaStar Platform only
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0509, 0x28),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0511, 0x00),     //non-continues mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0515, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0518, 0x06),     //R_HsEoT_prd=6 to satify MIPI timing spec
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055B, 0x11),     //R_MIPI_FrameReset_by_Vsync_En
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x05B0, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x06B6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0620, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0622, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0617, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0618, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0619, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x061A, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062E, 0x98),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x062F, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0630, 0xFC),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0631, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01BF, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C4, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0266, 0x11),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02D8, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02E7, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x02DA, 0x73),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0600, 0xB3),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0601, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234a, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234b, 0x40),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234c, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x20),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x15),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x08),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xB6),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x92),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x34),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0543, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x050F, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01E6, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0xA4),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C7, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C9, 0x06),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, 0x80),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, 0x0a),     //R_TG_WOI_HSize=2688
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, STREAMING_MD_WOI_VSIZE & 0xFF),    //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, STREAMING_MD_WOI_VSIZE >> 8),      //R_TG_WOI_VSize=1520
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_HSTART_REG_LBYTE, 0x04),     //R_TG_WOI_HStart=4
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, STREAMING_MD_WOI_VSTART & 0xFF),   //R_TG_WOI_VStart=8
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D7, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x07),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0126, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x64),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EB, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234D, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234E, 0x80),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x234F, 0x25),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07D9, 0x27),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x07DA, 0x19),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0731, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0706, 0x09),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x080D, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0821, 0x18),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0822, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0835, 0x14),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0836, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2247, 0xD0),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x070A, 0x31),     //T_OP_current_lvl_sel
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0708, 0x30),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e6, 0x10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01C6, 0x0E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c7, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c8, 0x70),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01c9, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01CF, PREROLL_MODE_HSIZE & 0xFF),    //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01D0, PREROLL_MODE_HSIZE >> 8),      //R_TG_WOI_HSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d1, PREROLL_MODE_VSIZE & 0xFF),    //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01d2, PREROLL_MODE_VSIZE >> 8),      //R_TG_WOI_VSize=368
    I2CM_2A1D_W(SENSOR_I2C_ADDR, WOI_VSTART_REG_LBYTE, 0x00),           //R_TG_WOI_VStart=0
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0064, 0x03),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0123, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e7, 0x0C),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01e8, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2224, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2229, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2226, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x222A, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0494, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x010B, 0x60),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0126, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, 0x8D),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, 0x20),     //R_LPF=8333 for Pre-roll 5fps (Pxclk=24MHz) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0156, 0x03),     //AE_UpdateFlag
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00eb, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2340, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2352, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2353, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2354, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2342, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0506, 0x04),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x055c, 0x03),     //R_MIPI_FrameStart_Early_EnH=0 for DOL mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056e, 0xf4),     //R_MIPI_Start_Rd_size=500 for DOL mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x056f, 0x01),     //R_MIPI_Start_Rd_size=500 for DOL mode
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002E, 0x00),     //R_ExpGain_AutoCalc_Preroll_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x002F, 0x00),     //R_ExpGain_AutoCalc_Stream_En=0, temp setting
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_LBYTE, 0x8B),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_EXPO_LINES_REG_HBYTE, 0x20),       //R_ExpLine_PreRoll=8331 (R_LPF - 2) optical center
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_LBYTE, 0x26),             //R_GainIndex_PreRoll=38 (AG=1.509X)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, PREROLL_GAIN_REG_HBYTE, 0x00),             //R_GainIndex_PreRoll=38 (AG=1.509X)
#if defined(SENSOR_INIT_CMDQ_MODE)
    // TODO : Fix SNR_SHUTTER_FPS_2A1D_HDR compile error
    //SNR_SHUTTER_FPS_2A1D_HDR(SENSOR_I2C_ADDR, 10000, 30000),
    //SNR_GAIN_2A1D_HDR(SENSOR_I2C_ADDR, 1024),
#else
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014E, SNR_LEF_INIT_EXPO_LINES & 0xFF),   //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x014F, SNR_LEF_INIT_EXPO_LINES >> 8),     //R_ExpLine_Stream=1598 (R_LPF - 2)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0152, 0x46),                             //R_ExpLine_short_Stream=70
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0153, 0x00),                             //R_ExpLine_short_Stream=70
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011E, VTS_HDR_30FPS & 0xFF),             //R_LPF=1600 for Stream 30fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x011F, VTS_HDR_30FPS >> 8),               //R_LPF=1600 for Stream 30fps
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0127, LEF_MAX_EXPO_LINE(VTS_HDR_30FPS) & 0xFF),    //R_ExpLine_long_max=3084 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0128, LEF_MAX_EXPO_LINE(VTS_HDR_30FPS) >> 8),      //R_ExpLine_long_max=3084 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0129, SEF_MAX_EXPO_LINE(VTS_HDR_30FPS) & 0xFF),    //R_ExpLine_short_max=108 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x012A, SEF_MAX_EXPO_LINE(VTS_HDR_30FPS) >> 8),      //R_ExpLine_short_max=108 for DOL
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0150, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0151, gastGainTable[SNR_LEF_INIT_GAIN_INDEX].u16RegVal >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0154, gastGainTable[SNR_SEF_INIT_GAIN_INDEX].u16RegVal & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0155, gastGainTable[SNR_SEF_INIT_GAIN_INDEX].u16RegVal >> 8),
#endif
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x012B, 0x02),     //R_ShortExp_max_chg_Mask_LongFrame=1
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x01ce, SNR_ORIT_INIT_VAL),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2343, 0x02),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x00),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x2341, 0x01),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0663, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0664, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0665, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0666, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0667, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0668, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0669, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066a, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066b, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066c, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066d, OB_IN_12BIT & 0xFF),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x066e, OB_IN_12BIT >> 8),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_HBYTE, 0xD0),      //D02A: Version (Dummy register)
    I2CM_2A1D_W(SENSOR_I2C_ADDR, VERSION_REG_LBYTE, 0x2A),      //D02A: Version (Dummy register)

#if defined(SENSOR_INIT_CMDQ_MODE)
#if (_LPC_SUPPORT_ && _LPC_HW_SUPPORT_)
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_HDR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box
#endif

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
#endif
};
#endif

#if defined(SENSOR_INIT_CMDQ_MODE) && defined(_LPC_SUPPORT_) && _LPC_HW_SUPPORT_
static SENSOR_INIT_TABLE Sensor_switch_to_streaming_mode_ps5416_hdr[] __attribute__((aligned(8)))=
{
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10101ef4, 0x08),    // Waiting time
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10101e46, 0x01),    // Enable bypass mode

    // Stop 8051
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10113610, 0x02),
    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10101e08, 0x00),

    I2CM_4A1D_W(LPC_I2C_ADDR, 0x10103910, 0x00),    // Stop LPC SPTimer 1 to avoid it sends exception interrupt

    SNR_SHUTTER_FPS_2A1D_HDR(SENSOR_I2C_ADDR, 10000, 30000),
    SNR_GAIN_2A1D_HDR(SENSOR_I2C_ADDR, 1024),

    SNR_MCLK_EN(0x7),               // MCLK 24MhZ

    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x85),
    CMDQ_DELAY_MS(10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x00EE, 0x1E),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83),

    I2CM_4A1D_W(LPC_I2C_ADDR, 0x101135d6, MIPI_MODE_HDR | OP_MODE_STREAMING),    // Update sensor status in LPC mail box

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
};
#endif
#else
static SENSOR_INIT_TABLE Sensor_switch_to_streaming_mode_ps5416[] __attribute__((aligned(8)))=
{
    /*set cmdq0 busy*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_BUSY),
    VIF_REG_DUMMY(CMDQ_STATUS_BUSY),

    SNR_MCLK_EN(0x7), // MCLK 24MhZ
    CMDQ_DELAY_MS(1),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x85), // sel op mode = suspend
    CMDQ_DELAY_MS(10),
    I2CM_2A1D_W(SENSOR_I2C_ADDR, 0x0008, 0x83), // sel op mode = streaming

    /*set cmdq0 idle*/
    CMDQ_REG_DUMMY(CMDQ_STATUS_READY),
    VIF_REG_DUMMY(CMDQ_STATUS_READY),

    /*append dummy*/
    //CMDQ_TAG('EOT'),    //end of table
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
    CMDQ_NULL(),
};
#endif // ifndef _PS5416_MIPI_SSI_SWITCH_IN_IPL_EARLYINIT_
#endif
